{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Certified Secure Software Lifecycle Professional in bullet points","text":"<ul> <li>This repo contains study notes for Certified Secure Software Lifecycle Professional (CSSLP) exam.</li> <li>Good luck &amp; enjoy studying! \u2615</li> <li>Contributions of any kind are welcome!</li> </ul>"},{"location":"#symbols","title":"Symbols","text":"<ul> <li> <p>There are some symbols used throughout the documentation: (TODO)</p> Symbol Description \ud83d\udca1 Best practice or practical tips \u2757 An important limitation, challenge or an exception \ud83d\udcdd Common exam area </li> </ul>"},{"location":"#content","title":"Content","text":"<ol> <li>Secure Software Concepts<ol> <li>General Security Concepts</li> <li>Risk Management</li> <li>Security Policies and Regulations</li> <li>Software Development Methodologies</li> </ol> </li> <li>Secure Software Requirements<ol> <li>Policy Decomposition</li> <li>Data Classification and Categorization</li> <li>Requirements</li> </ol> </li> <li>Secure Software Design<ol> <li>Design Processes</li> <li>Design Considerations</li> <li>Securing Commonly Used Architecture</li> <li>Technologies</li> </ol> </li> <li>Secure Software Implementation/Programming<ol> <li>Common Software Vulnerabilities and Countermeasures</li> <li>Defensive Coding Practices</li> <li>Secure Software Coding Operations</li> </ol> </li> <li>Secure Software Testing<ol> <li>Security Quality Assurance Testing</li> <li>Security Testing</li> </ol> </li> <li>Secure Lifecycle Management<ol> <li>General Security Concepts</li> </ol> </li> <li>Software Deployment, Operations, and Maintenance<ol> <li>Secure Software Installation and Deployment</li> <li>Secure Software Operations and Maintenance</li> </ol> </li> <li>Supply Chain and Software Acquisition<ol> <li>Supply Chain and Software Acquisition</li> </ol> </li> <li>Terms</li> <li>Outline</li> </ol> <p>\u2191</p>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/","title":"General Security Concepts","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#concepts","title":"Concepts","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#security-basics","title":"Security Basics","text":"<p>\ud83d\udcdd Determining and applying the appropriate balance of confidentiality, integrity, and availability (CIA)</p> <p>Although different, they are not necessarily contradictory - but they all require resources (money) and so the balance should be determined early on in the design process</p>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#confidentiality","title":"Confidentiality","text":"<ul> <li>Prevent disclosure of information to unauthorized parties</li> <li>Numerous methods for keeping data confidential: e.g. access controls, encryption</li> <li>Access Controls: Preferred for data in use and at rest</li> <li>Encryption: Data at rest and in transit</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#integrity","title":"Integrity","text":"<ul> <li>Protect data from unauthorized alteration</li> <li>e.g. Read-only, Read-and-write, write-only, delete access, etc</li> <li>Integrity contributes to a system's stability and reliability as well as the authenticity of data</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#availability","title":"Availability","text":"<ul> <li>Availability needed is determined by criticality of data and purpose in the overall system</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#authentication","title":"Authentication","text":"<ul> <li>Determining the identity of a user. A user is authenticated before their authorization can be determined.</li> <li> <p>To verify identity, a user can provide:</p> <ul> <li>Something you know - e.g. username/password (not very reliable)</li> <li>Something you have - e.g. token</li> <li>Something about you (something you are) e.g. biometrics<ul> <li>\u2757 Requires extra hardware, lacks specificity</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>New categories</p> <ul> <li>what users do (dynamic biometrics such as typing patterns, gait)</li> <li>where a user is (physical location)</li> </ul> </li> </ul> <ul> <li>ATMs use combination of something you know (PIN) and something you have (card) so if the card is lost, someone cannot authenticate as you</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#authorization","title":"Authorization","text":"<ul> <li>Applies predetermined access levels to the user</li> </ul> <ol> <li>Three elements are used<ol> <li>Requestor (subject) - already known due to authentication system</li> <li>Object     1. file, program, data, other resource</li> <li>Type/level of access to be granted     1. Read, write, create, delete, right to grant access rights to other objects</li> </ol> </li> </ol>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#accounting-auditing","title":"Accounting (Auditing)","text":"<ul> <li>Accounting is a means of measuring activity, auditing is the verification of what actual happened and allows management to observe in a nonpartisan manner</li> <li>Accounting can be done in IT systems by logging crucial activity as it occurs</li> <li>Accounting is needed when activity of specific data elements is crucial enough that it may be audited at a later date and time</li> </ul> <ul> <li> <p>Security level auditing can be performed at several levels:</p> <ul> <li>analysis of logging function</li> <li>verification of existence and operation of specific controls</li> <li>etc</li> </ul> </li> </ul> <ul> <li>Auditing takes resources to create, store, and review. Typically defaulted to minimal level so system operator must determine correct level based on system criticality.</li> <li>System criticality is determined by information criticality associated with information manipulated/stored with the system</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#non-repudiation","title":"Non-repudiation","text":"<ul> <li>Preventing a subject from denying a previous action with an object</li> <li>When authentication, authorization, and auditing are properly configured, non-repudiation is ensured</li> <li>Security requirements must specify the subjects, objects, and events for which non-repudiation is desired</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#system-tenets","title":"System Tenets","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#session-management","title":"Session Management","text":"<ul> <li>Design and implementation of controls to ensure that communication channels are secured from unauthorized access and disruption</li> <li>TCP (Transmission Control Protocol)<ul> <li>sequential numbering of packets and retransmission for missing packets</li> <li>Prevents unauthorized packets and session hijacking</li> <li>Has overhead</li> </ul> </li> <li>UDP (User Datagram Protocol)<ul> <li>connection-less/session-less</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#exception-management","title":"Exception Management","text":"<ul> <li>All exceptions must be detected and handled</li> <li>System should not fail in an insecure state</li> <li>Exception should not be leaked</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#configuration-management","title":"Configuration Management","text":"<ul> <li>Configuration should be protected from unauthorized changes</li> <li>e.g. separation of duties between production/non-prod personnel</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#secure-design-tenets","title":"Secure Design Tenets","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#good-enough-security","title":"Good Enough Security","text":"<ul> <li>Don't spend $10,000 to protect a $20 bill</li> <li>Trade-offs exist between security and other aspects</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#least-privilege","title":"Least Privilege","text":"<ul> <li>If a subject may require different levels of security for different tasks, better to switch security levels with specific tasks than run all the time at higher privilege</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#separation-of-duties","title":"Separation of Duties","text":"<ul> <li>No single individual can abuse the system</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#defense-in-depth","title":"Defense in Depth","text":"<ul> <li>i.e. layered security/defense and diversity defense</li> <li>Multiple, overlapping defenses</li> <li>No system is 100% secure - true goal of security is to make cost of compromising greater in time/effort/resources than it is worth</li> <li>Diversity of defense - layers should be dissimilar in nature</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#fail-safe","title":"Fail-safe","text":"<ul> <li>When a system experiences a failure, it should fail to a safe state</li> <li>Example: explicit deny</li> <li>CIA need to be appropriately maintained - availability causes the greatest design difficulties</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#economy-of-mechanism","title":"Economy of Mechanism","text":"<ul> <li>Higher complexity generally results in less security due to lack of understanding and more attack vectors</li> <li>Root cause analysis, especially for potential security issues, is much more difficult in complex systems</li> <li>Rule of thumb: eliminate all nonessential services and protocols</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#complete-mediation","title":"Complete Mediation","text":"<ul> <li>Authorization is never circumvented, even with repeated access</li> <li>Example: security kernel</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#open-design","title":"Open Design","text":"<ul> <li>Don't rely on security by obscurity</li> <li>Example: modern cryptography relies on the secrecy of the key, not secrecy of the algorithm</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#least-common-mechanism","title":"Least Common Mechanism","text":"<ul> <li>Prevent inadvertent sharing of information by using separate processes when possible</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#psychological-acceptability","title":"Psychological Acceptability","text":"<ul> <li>Users will try to get around security if it is seen as an obstacle</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#weakest-link","title":"Weakest Link","text":"<ul> <li>Adding to the security of a system is most effective when applied to the weakest link</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#leveraging-existing-components","title":"Leveraging Existing Components","text":"<ul> <li>Pros: increase efficiency and security</li> <li>Cons: monoculture environment (failures have a larger footprint)</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#single-point-of-failure","title":"Single Point of Failure","text":"<p>No one single piece should be able to cause the whole system to fail</p>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#security-models","title":"Security Models","text":"<ul> <li>Three key elements: people, processes, and technology</li> <li>Controls using 2-3 elements are more effective</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#access-control-models","title":"Access Control Models","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#acl-access-control-list","title":"ACL - access control list","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#mac-mandatory-access-control","title":"MAC - mandatory access control","text":"<ul> <li>rarely used</li> <li>originated in military</li> <li>restrict based on information sensitivity and clearance to access that information</li> <li>system designers have to determine object/subject relationships before they can be used</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#dac-discretionary-access-control","title":"DAC - discretionary access control","text":"<ul> <li>most common</li> <li>originated in military</li> <li>restrict based on identity of subjects/groups they belong to</li> <li>If a subject has permission, it is capable of passing that permission onto any other subject</li> <li>ACLs are the most common mechanism used to implement this control</li> <li>Strength: simplicity</li> <li>Weakness: security is optional, owner has to define access for potentially a plethora of objects</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#rbac-role-based-access-control","title":"RBAC - role-based access control","text":"<p>pretty common for active directory</p>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#rbac-rule-based-access-control","title":"RBAC - rule-based access control","text":"<ul> <li>much less common than role-based</li> <li>Use ACLs that have rules baked in such as only allow access during a certain time-of-day</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#access-control-matrix-model","title":"Access control matrix model","text":"<ul> <li>strength: simplicity</li> <li>weakness: difficult to implement due to no constraints, doesn't scale well</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#abac-attribute-based-access-control","title":"ABAC - attribute-based access control","text":"<ul> <li>Example: doctor getting one set of access for a specific patient vs a different patient</li> <li>Represented via eXtensible Access Control Markup Language (XACML)<ul> <li>also works for policy-based access control</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#bell-lapadula-confidentiality-model","title":"Bell-LaPadula Confidentiality Model","text":"<ol> <li>Two principles<ol> <li>Simple Security Rule - in order to see something, you have to be authorized     1. Used to preserve confidentiality - e.g. subject with medium clearance can't ready information with high sensitivity, only medium sensitivity     2. No-read-up</li> <li>* property (star property)     1. No-write-down     2. Subjects can only write to an object if the object has equal or higher classification - e.g. medium clearance can only write to medium sensitivity and above</li> </ol> </li> </ol>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#take-grant-model","title":"Take-Grant Model","text":"<ul> <li>Uses graph theory based on mathematical representation of controls</li> <li>Can be used to definitively determine rights</li> <li>Not typically used to implement access control but rather to analyze implementations</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#multilevel-security-model","title":"Multilevel Security Model","text":"<ul> <li>Separate groups have labels, groups act as containers, can be hierarchical</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#integrity-models","title":"Integrity Models","text":"<ul> <li>Depending on type of information, can be just as important or more important than confidentiality. e.g. stock prices (public but integrity is crucial)</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#biba-integrity-model","title":"Biba Integrity Model","text":"<ul> <li>Preserves information integrity</li> <li>Integrity levels separate permissions</li> <li>Low water mark policy, i.e. no-write-up rule<ul> <li>lower integrity subjects can't write up to higher integrity subjects</li> </ul> </li> <li>Integrity level of a subject is lowered if it acts on a subject with lower integrity</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#clark-wilson-security-model","title":"Clark-Wilson security model","text":"<ul> <li>Uses transactions</li> <li>Two levels:<ul> <li>Constrained data items (CDI)<ul> <li>Subject to integrity controls</li> </ul> </li> </ul> </li> <li>Unconstrained data items (UDI)</li> <li>Two types of processes:<ul> <li>Integrity verification processes (IVPs)<ul> <li>Ensure CDI data meets constraints</li> </ul> </li> <li>Transformation processes (TPs)<ul> <li>Change state of data from one to another</li> <li>Data can only be changed by trusted TPs, not users</li> </ul> </li> </ul> </li> </ul> <p>Example:</p> <ul> <li>A bank account balance is a CDI since integrity is important</li> <li>TP is the only way changes can be made</li> <li>IVP ensures balance is correct</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#information-flow-models","title":"Information Flow Models","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#brewer-nash-model-chinese-wall","title":"Brewer-Nash Model (Chinese Wall)","text":"<ul> <li>Technology employed to prevent access</li> <li>People trained not to compromise information</li> <li>Policies/processes put in place to ensure technology/people are properly used</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#data-flow-diagrams-dfds","title":"Data Flow Diagrams (DFDs)","text":"<ul> <li>Main security issue is protecting information when stored, in transit, and being processed</li> <li>Multiple levels - Level 0 (high level), level 1, level 2 (lowest level)</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#use-case-model","title":"Use Case Model","text":"<ul> <li>Functional perspective - how the system uses data</li> </ul> <ul> <li>Use cases for normal and abnormal use<ul> <li>Very important to security to understand use cases and misuse cases</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#assurance-models","title":"Assurance Models","text":"<ul> <li>Software assurance - level of confidence that software is free from intentional and accidental vulnerabilities, software functions as intended</li> </ul>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#operational-model-of-security","title":"Operational model of security","text":"<p>Three methods of managing security:</p> <ol> <li>prevention - access control, firewall, encryption</li> <li>detection - audit logs, intrusion detection, honeypots</li> <li>response - backups, incident response teams, forensics</li> </ol>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#nist-csf","title":"NIST CSF","text":"<p>Standards, guidelines, best practices</p> <p>5 main categories:</p> <ol> <li>Identify</li> <li>Protect</li> <li>Detect</li> <li>Respond</li> <li>Recover</li> </ol>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#adversaries","title":"Adversaries","text":"<p>Includes mother nature :)</p>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#adversary-type","title":"Adversary Type","text":"<ul> <li>Based on skill level</li> </ul> <ol> <li>Script Kiddie - 80-85% of adversaries</li> <li>Hacker - explorer - 15-20% key adversary due to skill/motivation<ol> <li>Cracker - hacker with malicious intent</li> </ol> </li> <li>Elite - 1-3%<ol> <li>completely underground</li> </ol> </li> </ol>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#adversary-groups","title":"Adversary Groups","text":""},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#skill-and-capability","title":"Skill and capability","text":"<ol> <li>Unstructured threat - little or no resources, no specific motivation, typically only an annoyance</li> <li>Structured threat - specific mission, time and resources</li> <li>Highly structured threat - organized crime, crimeware</li> <li>Nation-state threat<ol> <li>Advanced persistent threat (APT) - multiple methods to penetrate and then live undetected</li> </ol> </li> <li>Insider vs outsider</li> </ol>"},{"location":"01-Secure-Software-Concepts/01-General-Security-Concepts/#threat-landscape-shift","title":"Threat Landscape Shift","text":"<ul> <li>Around 2005 - criminalization of cyberspace allowing monetization</li> <li>Market for exploits</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/","title":"Risk Management","text":"<ul> <li>assess the impact if an adverse event were to happen decide what could be done to control that impact as deemed necessary</li> </ul> <p>Well formed risk statement includes:</p> <ol> <li>asset</li> <li>threat</li> <li>vulnerability</li> <li>mitigation</li> <li>impact</li> <li>probability</li> </ol>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#risk","title":"Risk","text":"<p>Systematic risk</p> <ul> <li>fire, theft, software bugs - mitigated through diversification</li> <li>predictable under stable circumstances   Unsystematic risk</li> <li>recession, epidemics, protocol design errors</li> <li>come from sources that are difficult to predict</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#business-risk","title":"Business risk","text":"<ul> <li>operation of a business as a business</li> </ul> <p>Examples:</p> <ul> <li>Treasury management (financial risk)<ul> <li>holdings in bonds, futures, currencies, etc</li> </ul> </li> <li>Revenue management</li> <li>Contract management</li> <li>Fraud<ul> <li>deliberate deception</li> </ul> </li> <li>Regulatory</li> <li>Business continuity</li> <li>Technology</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#technology-risk","title":"Technology risk","text":"<ul> <li>technology used in development process as well as software functionality</li> </ul> <p>Examples:</p> <ul> <li>Security - protective attributes</li> <li>Privacy - attributes that define access/sharing</li> <li>Project risk management</li> <li>Change management</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#risk-controls","title":"Risk controls","text":"<ul> <li>\ud83d\udcdd best method for managing risk in software</li> <li>\ud83d\udcdd Understanding environment and risk and applying controls should be owned by development team</li> </ul> <p>Three classes:</p> <ol> <li>Administrative</li> <li>Technical</li> <li>Physical</li> </ol> <p>For each class, there are four types of controls</p> <ol> <li>Preventative</li> <li>Detective</li> <li>Corrective</li> <li>Compensating</li> </ol>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#preventative","title":"Preventative","text":"<ul> <li>primary control</li> <li>proactive</li> <li>best mitigation</li> <li>goal: stop attack</li> </ul> <p>Examples:</p> <ul> <li>separation of duties</li> <li>adequate documentation</li> <li>physical control over assets</li> <li>authorization mechanisms</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#detective","title":"Detective","text":"<ul> <li>reactive</li> <li>goal: detect presence of attack</li> </ul> <p>Examples:</p> <ul> <li>logs</li> <li>audits</li> <li>inventories</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#corrective","title":"Corrective","text":"<ul> <li>after a vulnerability is exploited</li> <li>goal: reduce total impact</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#compensating","title":"Compensating","text":"<ul> <li>when primary controls fail</li> <li>reactive</li> <li>defense in depth</li> </ul> <p>Example: separation of duties is a preventitve control to prevent fraud, financial review of reports is an after the fact compensating control</p>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#controls-framework","title":"Controls framework","text":"<ul> <li>managing risk as part of a complete system</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#qualitative","title":"Qualitative","text":"<ul> <li>Subjectively determine impact of an event - involves experts and group consensus</li> </ul> <p>Two aspects: impact and probability</p>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#qualitative-matrix","title":"Qualitative matrix","text":""},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#failure-mode-effects-analysis-fmea","title":"Failure mode effects analysis (FMEA)","text":"<ul> <li>assess failures and effects on the system</li> <li>for each issue, elements are defined</li> <li>severity of risk is defined (1-10)</li> <li>probability (1-10)</li> <li>detectability (1-10)</li> <li>calculate product (over 200 / 1000 worth looking at)</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#quantitative","title":"Quantitative","text":"<ul> <li>Objectively determine impact of an event - involves use of metrics and models</li> </ul> <ul> <li>use historical loss and trends to predict future loss</li> <li>highly dependent on historical loss data</li> <li>assuming constant risk rate is not an agreed upon concept</li> </ul> <p>key info:</p> <ul> <li>important to come to consensus on values being used</li> <li>use consistent values</li> <li>models can never replace judgement and experience, but can enhance decision making</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#single-loss-expectancy-sle","title":"Single loss expectancy (SLE)","text":"<p>\ud83d\udcdd SLE = asset value * (exposure factor or duration)</p>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#annualized-rate-of-occurrence-aro","title":"Annualized rate of occurrence (ARO)","text":"<p>\ud83d\udcdd ARO = number of events / number of years covered</p>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#annualized-loss-expectancy-ale","title":"Annualized loss expectancy (ALE)","text":"<p>\ud83d\udcdd ALE = SLE * ARO</p>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#residual-risk-model","title":"Residual Risk Model","text":"<ul> <li>Absolute security is not achievable</li> </ul> <p>Example:</p> <ul> <li>potential loss of $100k</li> <li>firewall blocks 95%</li> <li>IDS (intrustion detection system) is 80% effective</li> <li>IRT (incident response team) is 50% effective</li> <li>100k * 95% + (5k * 80% * 50%) = 97k with 3k residual</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#roi","title":"ROI","text":"<ul> <li>\ud83d\udcdd ROI % = (avoided loss - control cost) / control cost * 100</li> <li>\ud83d\udcdd ROI time = avoided annual loss / annual control cost</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#governance-risk-and-compliance","title":"Governance, Risk, and Compliance","text":"<ul> <li>Governance: sum of exective actions that manage risk</li> <li>need to comply with laws and regulations, so GRC terms are used synonomously</li> <li>Compliance: activities associated with external requirements (contractual, policy, strategic, industry, regulations, laws)</li> <li>Conformance: activities associated with internal requirements (org policies/standards)</li> <li>Compliance gets priority over conformance</li> <li>many reasons, primary being penalties</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#legal","title":"Legal","text":"<p>Two key legal issues with significant risk</p> <ol> <li>intellectual property<ol> <li>legal action provides some protection but not against unknown criminals</li> </ol> </li> <li>data breach</li> </ol>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#standards","title":"Standards","text":"<ul> <li>established norms</li> <li>goal: define rules to ensure specified level of quality</li> </ul>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#risk-management-models","title":"Risk Management Models","text":""},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#general-risk-management-model","title":"General Risk Management Model","text":"<ol> <li>Asset identification<ol> <li>includes classification</li> </ol> </li> <li>Threat assessment<ol> <li>threats and vulnerabilities for each asset</li> <li>likelihood of occurrence</li> </ol> </li> <li>Impact determination and quantification<ol> <li>Tangible: financial loss, physical damage</li> <li>Intangible: reputation</li> </ol> </li> <li>Control design and evaluation<ol> <li>Decide which controls to implement</li> </ol> </li> <li>Residual Risk Management<ol> <li>Identify additional controls needed to reduce residual risk</li> </ol> </li> </ol>"},{"location":"01-Secure-Software-Concepts/02-Risk-Management/#software-engineering-institute-model","title":"Software Engineering Institute Model","text":"<ol> <li>Identify - list potential risks</li> <li>Analyze - impact, probability - classify and prioritize risks</li> <li>Plan - Decide actions to take and implement mitigation</li> <li>Track - Monitor and review risks and mitigations</li> <li>Control - make corrections as needed</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/","title":"Security Policies and Regulations","text":"<ul> <li>All hazards: senior management is responsible for security, compliance, all exercises in risk management</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#fisma","title":"FISMA","text":"<ul> <li>Federal Information Security Management Act of 2002</li> <li>\ud83d\udcdd Primary governing law for federal computer systems</li> </ul> <ul> <li>Requires each federal agency to implement a security program</li> <li>NIST (National Institute of Standards and Technology) developed guidelines</li> <li>Risk Management Framework (RMF) was published by NIST<ul> <li>Initial framework included:<ul> <li>Inventory of systems</li> <li>Categorize information and systems according to risk level</li> <li>security controls</li> <li>Certification/accreditation of systems (risk assessment and security plans)</li> <li>Training</li> </ul> </li> </ul> </li> <li>Information Security Automation Program</li> <li>Security Content Automation Protocol (SCAP)</li> </ul> <p>NIST six steps for a RMF:</p> <ol> <li>Categorize systems</li> <li>Select security controls</li> <li>Implement controls</li> <li>Assess Controls</li> <li>Authorize information systems</li> <li>Monitor controls</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#sarbanes-oxley-2002","title":"Sarbanes-Oxley (2002)","text":"<ul> <li>financial accounting information systems must have control over integrity</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#gramm-leach-bliley-act-financial-modernization-act-of-1999-glba","title":"Gramm-Leach-Bliley Act / Financial Modernization Act of 1999 (GLBA)","text":"<ul> <li>Protect PFI (personal financial information)<ul> <li>act specifies rules for collection, processing, storage, and disposal of PFI</li> </ul> </li> </ul> <p>Primary rules:</p> <ol> <li>Financial Privacy Rule - collection and disclosure of PFI</li> <li>Safeguards Rule - applies to financial institutions - covers design, implementation, and maintenance of safeguards to protect PFI</li> <li>Pretexting Protections Rule - address pretexting (falsely pretending) to obtain PFI</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#hipaa-and-hitech","title":"HIPAA and HITECH","text":"<ul> <li>HIPAA - (Healthcare Insurance Portability and Accountability Act)<ul> <li>Protect PHI (personal health information)</li> </ul> </li> <li>HITECH - (Health Information Technology for Economic and Clinical Health Act)<ul> <li>enhance privacy of electronic PHI records</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#payment-card-industry-pci","title":"Payment Card Industry (PCI)","text":"<p>Industry group established to secure cardholder data</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#data-security-standard-pci-dss","title":"Data Security Standard (PCI DSS)","text":"<p>Industry group members that accept and process bank cards are required to protect cardholder data</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#payment-application-data-security-standard-pa-dss","title":"Payment Application Data Security Standard (PA DSS)","text":"<p>Standard to validated that a payment application is compliant with PCI DSS</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#pin-transaction-security-pts","title":"PIN Transaction Security (PTS)","text":"<p>Applies to PIN Entry Devices (PEDs)</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#legal-issues","title":"Legal Issues","text":""},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#intellectual-property","title":"Intellectual Property","text":"<ol> <li>Patents<ol> <li>Exclusive right for a specified time</li> <li>protect rights in exchange for disclosure of invention</li> <li>Varies by country but in the US, invention must be new, useful, and non-obvious</li> <li>Prevent others from using invention</li> <li>Patent must be applied for prior to disclosure</li> <li>challenging and expensive</li> </ol> </li> <li>Copyrights<ol> <li>Protection of an idea or information for a specified time</li> <li>right to be credited, who may adapt, who may perform, who may financially benefit, etc</li> <li>governed internationally by Berne Convention</li> <li>straightforward and affordable</li> </ol> </li> <li>Trademarks<ol> <li>recognizable quality of product/firm</li> <li>used to build brand association</li> <li>can be common-law or registered - registered provides more legal protection and recovery</li> <li>managed internationally through World Intellectual Property Organization</li> </ol> </li> <li>Trade Secrets<ol> <li>best time-based protection</li> <li>protected by many laws as long as company makes a reasonable attempt to keep it secret</li> <li>if secret is independently discovered (e.g. recipe), then secret holder has no recourse</li> <li>US Digital Millenium Copyright Act prohibits reverse-engineering of security safeguards</li> </ol> </li> <li>Warranty<ol> <li>hardware often has a warranty to perform at the specified level</li> <li>software does not and is generally sold as is</li> </ol> </li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#privacy","title":"Privacy","text":"<ul> <li>To obtain certain goods, users must consent to share certain information</li> <li>One main issue with privacy is data disposition</li> <li>\ud83d\udcdd founded on notice, choice, and security</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#privacy-policy","title":"Privacy Policy","text":"<p>Internal privacy policy details the firm's responsibilities to protect information</p> <p>External privacy policy, or privacy disclosure statement, informs customers how data is protected, used, and disposed of</p> <p>In financial sector, Gramm-Leach-Bliley Act mandates firms clearly state how information is shared</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#pii","title":"PII","text":""},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#phi-personal-health-information-protected-health-information","title":"PHI (Personal Health Information / Protected Health Information)","text":"<p>Highly valued by cyber criminals</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#breach-notifications","title":"Breach notifications","text":"<ul> <li>Incident response (what happened, how, what was lost)</li> <li>Most states have disclosure laws, no federal law</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#data-protection-principles","title":"Data Protection Principles","text":"<ul> <li>data protection - European Union</li> <li>European Union Data Protection Directive (EUDPD) - old</li> <li>General Data Protection Regulation (GDPR)</li> <li>In US, consumers must opt-out</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#european-union-privacy-law","title":"European Union Privacy Law","text":"<ul> <li>consumers must opt-in</li> <li>three conditions must be met for processing personal data:<ul> <li>transparency: consent, including purpose and recipients</li> <li>legitimate purpose</li> <li>proportionality</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#safe-harbor-principles","title":"Safe Harbor Principles","text":"<ul> <li>Non-EU firms can meet EUDPD requirements by:<ul> <li>Have been replaced, still helpful to understand</li> </ul> </li> </ul> <ol> <li>Notice: inform customers of data collection and purpose</li> <li>Choice: can opt out of collection and transfer of data</li> <li>Onward transfer: third parties must follow principles</li> <li>Security: Reasonable efforts to prevent loss of data</li> <li>Data integrity: Relevant and reliable for purpose it was collected</li> <li>Access: Customers can access data and correct/delete</li> <li>Enforcement: Effective means for enforcing rules</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#gdpr-2018","title":"GDPR (2018)","text":"<p>Several major changes:</p> <ol> <li>Personal Data elements are anything that can be linked back to a subject, including cookies</li> <li>Individuals must have full access to how data is processed in a clear manner<ol> <li>who is asking for the data</li> <li>what the data will be used for</li> <li>how long can it be kept</li> <li>if and where it will be transferred internationally</li> <li>right to access, correct, or erase</li> <li>right to withdraw consent, even after collection</li> <li>right to lodge a complaint</li> </ol> </li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#california-consumer-privacy-act-of-2018-ab-375","title":"California Consumer Privacy Act of 2018 (AB 375)","text":"<p>Similar to GDPR</p> <p>individuals still must opt out but they have rights:</p> <ul> <li>right to know (access to data and how it's used)</li> <li>right to delete (some exceptions)</li> <li>right to opt out of sale of information</li> <li>right to non-discrimination if they don't want data sold</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#security-standards","title":"Security Standards","text":""},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#iso-international-organization-for-standardization","title":"ISO (International Organization for Standardization)","text":"<ul> <li>five year review cycle</li> </ul> <p>Relevant area is under JTC 1 - Information Technology</p> <ul> <li>Subcommittee 7 (Software and Systems Engineering)</li> <li>Subcommittee 27 (IT Security Techniques)</li> </ul> <p>Prominent ISO Standards for CSSLPs - See page 64</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#iso-2700x-series","title":"ISO 2700X Series","text":"<p>For information security</p> <p>Includes vocabulary, code of practice, implementation guidance, metrics, and risk management</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#iso-15408-common-criteria-evaluation-assurance-levels-eal","title":"ISO 15408 Common Criteria / Evaluation Assurance Levels (EAL)","text":"<p>Functional and assurance requirements</p> <p>Claims can be made about the product that can be evaluated and verified</p> <ul> <li>TOE: Target of Evaluation - product or system being evaluated</li> <li>ST: Security Target - security properties of a TOE</li> <li>PP: Protection profile - set of security requirements associated with a certain class of product<ul> <li>products in the same class can be compared more easily</li> </ul> </li> </ul> <p>higher EAL != better security</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#iso-9126-software-engineering-product-quality","title":"ISO 9126 Software Engineering Product Quality","text":"<ul> <li>four parts to define a quality model</li> <li>Quality of use metrics for specific scenarios<ul> <li>Functionality</li> <li>Reliability</li> <li>Usability</li> <li>Efficiency</li> <li>Maintainability</li> <li>Portability</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#iso-12207-systems-and-software-engineering-software-life-cycle-processes","title":"ISO 12207 Systems and Software Engineering - Software Life Cycle Processes","text":"<ul> <li>set of processes each having its own activities, tasks, and outcomes</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#iso-15504-information-technology-process-assessment","title":"ISO 15504 Information Technology - Process Assessment","text":"<p>SPICE/SPICD - Software Process Improvement and Capability Determination</p>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#nist","title":"NIST","text":"<p>National Institute of Standards and Technology</p> <p>Computer security division</p> <ul> <li>Federal Information Security Management Act of 2002 (FISMA)</li> </ul> <p>Information Technology Laboratory (ITL)</p> <ul> <li>Security bulletins 6x/yr</li> <li>Interagency/internal reports (NISTIRs): technical research</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#federal-information-processing-standards-fips","title":"Federal Information Processing Standards (FIPS)","text":"<ul> <li>mandatory reqs on fed agencies and specific contractors</li> <li>few but broad in authority and scope</li> <li>Since FISMA, all aspects are mandatory and waivers are not allowed</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#nist-sp-800-series","title":"NIST SP 800 Series","text":"<ul> <li>more commonly used by industry</li> <li>communicate results of research/guidelines assoc with securing systems</li> <li>incl. cryptographic protocols, security reqs, risk mgmt framework, governance, etc</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#industry","title":"Industry","text":"<ul> <li>SAFECode<ul> <li>Industry-backed</li> <li>increase comm. between firms on software assurance</li> <li>share best practices that have been successful</li> <li>SAFECode Releases Software Security Guidance for Agile Practitioners</li> <li>valuable to large and small firms</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#secure-software-architecture","title":"Secure Software Architecture","text":""},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#security-frameworks","title":"Security Frameworks","text":""},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#cobit-control-objectives-for-information-and-related-technology","title":"COBIT - Control Objectives for Information and Related Technology","text":"<p>Published by ISACA (Information Systems Audit and Control Association)</p> <ul> <li>bridge gap between control reqs, tech issues, and business risks</li> <li>Latest is COBIT 2019 (book explains COBIT 5)</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#cobit-5-principles","title":"COBIT 5 Principles","text":"<ol> <li>Meeting stakeholder needs</li> <li>covering the enterprise end to end</li> <li>applying a single, integrated frmwrk</li> <li>enabling a holistic apprch</li> <li>separating governance from mgmt</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#coso-committee-of-sponsoring-organizations-of-the-treadway-commission","title":"COSO - Committee of Sponsoring Organizations of the Treadway Commission","text":"<ul> <li>five private-sector orgs in response to Treadway Commissions report on fraudulent financial reporting</li> <li>Enterprise Risk mgmt integrated frmwrk to assess control systems</li> <li>five components/principles<ul> <li>control env</li> <li>risk assmnt</li> <li>ctrl activities</li> <li>info and communication</li> <li>monitoring</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#itil-information-technology-infrastructure-library","title":"ITIL - Information Technology Infrastructure Library","text":"<ul> <li>aligning IT services with bus. needs</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#five-volumes","title":"Five volumes","text":"<ol> <li>ITIL Service Strategy</li> <li>ITIL Service Design</li> <li>ITIL Service Transition</li> <li>ITIL Service Operation</li> <li>ITIL Continual Service Improvement</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#zachman","title":"Zachman","text":"<ul> <li>matrix frmwrk to define an enterprise</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#sabsa-sherwood-applied-business-security-architecture-sabsa","title":"SABSA - Sherwood Applied Business Security Architecture (SABSA)","text":"<ul> <li>frmwrk and methodology for risk-driven enterprise infosec architectures</li> <li>similar to Zachman</li> <li>Goal: all reqs, including security reqs, can be derived from business reqs</li> <li>Works well with SDLC</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#sdlc","title":"SDLC","text":"<p>Using some kind of process-based lifecycle results in greater security</p> <ul> <li>partly due to models</li> <li>partly due to opportunities for process improvement on models</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#sei-cmmi-software-engineering-institute-capability-maturity-model-integration","title":"SEI CMMI (Software Engineering Institute - Capability Maturity Model Integration)","text":"<ul> <li>rates process maturity on a 1-5 scale</li> <li>Three primary areas: product/service dvlpmnt, service establishment/mgmt, product/service acquisition</li> <li>framework for business process improvement: improving operational processes</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#process-maturity-levels","title":"Process Maturity Levels \ud83d\udcdd","text":"<ol> <li>Initial: uncontrolled, results unpredictable</li> <li>Managed: established, typically reactive</li> <li>Defined: characterized for org, proactive</li> <li>Quantitatively Managed: measured and controlled</li> <li>Optimizing: process improvement</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#owasp-already-familiar-with","title":"OWASP - already familiar with :)","text":""},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#octave-operationally-critical-threat-asset-and-vulnerability-evauluation","title":"OCTAVE - Operationally Critical Threat, Asset, and Vulnerability Evauluation","text":"<ul> <li>tools, techniques, methods for risk-based infosec assmnt</li> <li>Three phases: build asset-based threat profiles, identify infra vulns, dvlp security strategy</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#bsi-build-security-in","title":"BSI - Build Security In","text":"<ul> <li>US Dep of Homeland Security</li> <li>info on research, best practices, generic principles for software security</li> <li>collaborative effort for devs, architects, infosec practitioners to build security into SDLC</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#trusted-computing","title":"Trusted Computing","text":"<ul> <li>developed and promoted by trusted computing group (TCG)</li> <li>Has a trusted platform module (TPM) with encryption key that is only accessible through the TPM chip</li> <li>controversy: could the machine be secured from its owner?</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#principles","title":"Principles","text":"<ol> <li>security</li> <li>privacy</li> <li>interoperability</li> <li>portability of data</li> <li>controllability</li> <li>ease of use</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#ring-model","title":"Ring Model","text":"<ul> <li>system method</li> <li>protect data/functionality from errors and malicious behavior</li> <li>ring can only interact within itself or with adjacent rings</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#reference-monitor-reference-validation-mechanism","title":"Reference Monitor (reference validation mechanism)","text":"<ul> <li>access control methodology</li> <li>mediates interaction between subjects/objects</li> <li>\ud83d\udcdd three qualities are req:<ul> <li>no path around it, always invoked (complete mediation)</li> <li>tamper-proof</li> <li>small enough to be verifiable</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#protected-objects","title":"Protected Objects","text":"<ul> <li>existence may be known, cannot be interacted with directly</li> <li>must use protected subsystem with specific procedures and a security policy</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#trusted-computing-base-tcb","title":"Trusted Computing Base (TCB)","text":"<ul> <li>combination of software/firmware/hardware to ensure security</li> <li>includes kernel and reference monitors, not applications<ul> <li>if application becomes compromised, it would not affect TCB</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#trusted-platform-module-tpm","title":"Trusted Platform Module (TPM)","text":"<ul> <li>secure storage of crypto. keys and platform auth - on a chip</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#microsoft-trustworthy-computing-initiative-2002","title":"Microsoft Trustworthy Computing Initiative (2002)","text":"<p>Four pillars:</p> <ol> <li>security (including social dimension)</li> <li>privacy</li> <li>reliability</li> <li>business integrity</li> </ol>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#acquisition","title":"Acquisition","text":"<p>Terms:</p> <ul> <li>Commercial off-the-shelf (COTS)</li> <li>Government off-the-shelf (GOTS)</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#build-vs-buy","title":"Build vs buy","text":"<ul> <li>some things are best purchased (database software)</li> <li>mission-critical or proprietary business info is best built</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#outsourcing","title":"Outsourcing","text":"<ul> <li>can find cheaper programmers/people but most of a project's cost is not from the coders</li> <li>has challenges due to geographic separation</li> </ul>"},{"location":"01-Secure-Software-Concepts/03-Security-Policies-and-Regulations/#contractual-terms-and-slas","title":"Contractual Terms and SLAs","text":"<ul> <li>should include references to security ctrls/standards</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/","title":"Software Development Methodologies","text":""},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#secure-development-lifecycle-sdl","title":"Secure Development Lifecycle (SDL)","text":"<ul> <li>add process checks to development process to include necessary security elements</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#principles","title":"Principles","text":"<ul> <li>SMART - Specific, Measurable, Attainable, Realistic, Time bound</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#security-vs-quality","title":"Security vs Quality","text":"<ul> <li>quality = fitness for use or absence of defects</li> <li>high quality != secure but low quality with lots of defects will have security issues from basic mistakes</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#security-features-secure-software","title":"Security Features != Secure Software","text":"<ul> <li>encryption, authentication, and other security features can improve usability</li> <li>secure software development is different: ensure all elements of software operate securely</li> <li>adding security features may make software more marketable but secure software means it does what it was designed to do and only what it was designed to do</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#secure-development-lifecycle-components","title":"Secure Development Lifecycle Components","text":""},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#software-team-awareness-and-education","title":"Software Team Awareness and Education","text":"<ul> <li>Basic knowledge<ul> <li>all should have</li> </ul> </li> <li>Advanced topics<ul> <li>only certain people need</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#gates-and-security-reqs","title":"Gates and Security Reqs","text":"<ul> <li>eventually, if conducted in a firm and uniform manner, security is included as part of the normal business process</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#bug-tracking","title":"Bug tracking","text":"<ul> <li>sometimes, bugs can be exploited and result in a potential security bug</li> <li>\ud83d\udcdd DREAD (1-10 scale)<ul> <li>Risk = Impact * Probability<ul> <li>Impact = Damage (in terms of CIA) and Affected Users (quantity)</li> <li>Probability = Reproducibility (difficulty/scriptable?), Exploitability (attack difficulty), discoverability (difficulty to find)</li> </ul> </li> <li>detailed scoring is subjective and unreliable due to context/point of view</li> </ul> </li> <li>better to use a defined set of severities (critical, important/high, moderate/medium, low)</li> <li>Bug bar - level at which a bug must be fixed in the current release<ul> <li>bugs are fixed based on risk, not ease of closure</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#threat-modeling","title":"Threat modeling","text":"<ul> <li>basically an ARA</li> <li>best performed during design phase</li> <li>focused on how data moves through app</li> <li>Threat model needs to include: app as a whole, security/privacy features, features that have security/privacy implications when they fail, features that cross trust boundaries</li> <li>\ud83d\udcdd STRIDE (spoofing, tampering, repudiation, info disclosure, DoS, elevation of privilege)</li> <li>Threat trees - graphical representation of what needs to exist for a threat to be realized (uses logical AND/OR)</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#fuzzing","title":"Fuzzing","text":"<ul> <li>random input<ul> <li>scan for buffer overflows, system crashes, etc</li> </ul> </li> <li>structured input<ul> <li>scan for injection vulns, XSS, input specific (arithmetic overflow, XXE, etc)</li> </ul> </li> <li>mutation<ul> <li>use sample data</li> </ul> </li> <li>input generation<ul> <li>based on models of system</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#security-reviews","title":"Security Reviews","text":"<ul> <li>audit process to verify functioning as desired<ul> <li>use at key places (between stages in SDL)</li> </ul> </li> <li>purpose: NOT to test for security, but to ensure steps are being done properly</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#mitigations","title":"Mitigations","text":"<p>Standard Techniques:</p> <ol> <li>Do nothing</li> <li>Warn user</li> <li>Remove problem</li> <li>Fix problem</li> </ol>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#software-development-models","title":"Software Development Models","text":""},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#waterfall","title":"Waterfall","text":"<ul> <li>based on manufacturing design - each step completed before next step</li> <li>linear, sequential, no repeating</li> <li>useful for small pieces (incorporated into spiral/agile methods)</li> <li>non-workable in practice</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#spiral","title":"Spiral","text":"<ul> <li>iterative, steps can be repeated iteratively</li> <li>things are built incrementally</li> <li>suited for large projects (may have several interconnected spirals)</li> <li>smaller-scale version can be seen in some agile methods</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#prototype","title":"Prototype","text":"<ul> <li>based on manufacturing</li> <li>throwaway - gain information on subset</li> <li>evolutionary - build system through testing and adding features through accretion<ul> <li>vertical prototype - add more functionality (add back-end/database to front-end)</li> <li>horizontal prototype - framework/infrastructure - adds features to one layer (build out entire front-end)<ul> <li>commonly used for software because it is modular</li> </ul> </li> </ul> </li> <li>limits resources to test major elements and reduce risk</li> <li>can be used in spiral/agile</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#microsoft-security-development-lifecycle","title":"Microsoft Security Development Lifecycle","text":"<ul> <li>Goal: produce software that is secure, not software that performs security or has specific security features<ul> <li>Reduce # of security vulns</li> <li>reduce severity of security vulns that remain</li> </ul> </li> <li>2004 SD3+C<ul> <li>Secure by Design</li> <li>Secure by Default</li> <li>Secure in Deployment</li> <li>Communications</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#secure-by-design","title":"Secure by Design","text":"<ul> <li>review detailed designs</li> <li>develop mitigations for all identified threats</li> <li>consider legacy code and protocols</li> <li>deprecate elements that are no longer secure</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#privacy-by-design","title":"Privacy by design","text":"<ul> <li>end-user control: enable end-user to make informed decisions about data collected, stored, shared</li> <li>only collect and retain required info</li> <li>use encryption to mitigate data loss issues<ul> <li>modular fashion in case it needs to be changed</li> <li>proper crypto libraries/functions</li> <li>proper key protection/rotation</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#by-default","title":"By Default","text":"<ul> <li>default config is as secure as possible</li> <li>default config with privacy in mind</li> <li>limit features turned on by default<ul> <li>if less than 80% will use, turn off by default</li> </ul> </li> <li>software should only operate with elevated rights when required</li> <li>minimize attack surface by default</li> <li>notify user if default config changes</li> <li>limit services/daemons running by default</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#in-deployment","title":"In Deployment","text":"<ul> <li>one of last major touchpoints where config/settings are routinely modified</li> <li>develop prescriptive deployment guides<ul> <li>How</li> <li>Implications</li> <li>options available to user</li> </ul> </li> <li>patching/upgrades should be built into deployment and give users control</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#communications","title":"Communications","text":"<ul> <li>efficient channels between security response and dev teams</li> <li>channel where dev team is connected to info sources like end-user issues/reports</li> <li>communicate security changes to end-users</li> <li>media/trade outlets to customers/prospective customers</li> <li>White papers/technical documentation can improve effectiveness of security effort by reducing concerns/issues from customers (transparency)<ul> <li>Open communication = increased cooperative/coordinated efforts</li> <li>Open communication != increased risk</li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#microsoft-sdl-components","title":"Microsoft SDL Components","text":"<ul> <li>started in 2002</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#training","title":"Training","text":"<ul> <li>targeted security training for all</li> <li>training hour requirements</li> <li>includes:<ul> <li>core training - prereq, basic knowledge</li> <li>specialized modules for specific roles</li> <li>new developments/practices in industry<ul> <li>may become part of core if becomes mainstream</li> </ul> </li> </ul> </li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#requirements","title":"Requirements","text":"<ul> <li>establish security and privacy reqs for software</li> <li>create quality gates and bug bars</li> <li>develop security/privacy risk assessments</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#design","title":"Design","text":"<ul> <li>risk and privacy analyses</li> <li>mitigated by design</li> <li>attack surface reduction techniques</li> <li>threat modeling for known and potential threats</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#implementation","title":"Implementation","text":"<ul> <li>approved languages, functions, libraries</li> <li>remove deprecated functions</li> <li>recode legacy code</li> <li>static program checkers to maintain code standards</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#verification","title":"Verification","text":"<ul> <li>known and potential vulns</li> <li>review attack surface: does it match design</li> <li>fuzz testing against inputs</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#release","title":"Release","text":"<ul> <li>prepare for potential issues coming in</li> <li>prepare incident response plan</li> <li>confirm all security elements completed and documented</li> </ul>"},{"location":"01-Secure-Software-Concepts/04-Software-Development-Methodologies/#response","title":"Response","text":"<ul> <li>collect error reports and handle per incident response plan<ul> <li>current release bug fixes through patches</li> <li>future releases: mitigation</li> </ul> </li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/","title":"Policy Decomposition","text":""},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#nist-computer-security-policies","title":"NIST Computer Security Policies \ud83d\udcdd","text":"<ol> <li>program policies: foundational for infosec program</li> <li>issue-specific policies: specific issues such as PII or data retention</li> <li>system-specific policies: technical directives such as firewall rules</li> </ol> <p>Regulations and government directives are also sources of security requirements</p>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#confidentiality-integrity-and-availability-requirements","title":"Confidentiality, Integrity, and Availability Requirements","text":""},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#confidentiality","title":"Confidentiality","text":"<ul> <li>Who is authorized to see what data</li> <li>mechanism to enforce</li> <li>business requirements with respect to data collection, transfer, storage, and use</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#integrity","title":"Integrity","text":"<ul> <li>who is authorized to alter what data</li> <li>mechanism to detect errors and enforce</li> <li>business requirements with respect to data collection, transfer, storage, and use</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#availability","title":"Availability","text":"<ul> <li>available to authorized users when needed</li> <li>deny unauthorized/illegitimate access</li> <li>prevent DoS</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#authentication-authorization-and-auditing-requirements","title":"Authentication, Authorization, and Auditing Requirements","text":""},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#identification-and-authentication","title":"Identification and Authentication","text":"<p>Identity Requirements:</p> <ul> <li>identity mechanism</li> <li>mgmt of identities, incl. reaffirmations</li> </ul> <p>Authentication Requirements:</p> <ul> <li>method of authentication</li> <li>strength of authentication</li> </ul> <p>\ud83d\udcdd Three general authentication factors</p> <ol> <li>Something you know</li> <li>Something you have</li> <li>Something you are</li> </ol> <ul> <li>\ud83d\udcdd Most authentication is one party authenticating the other (bank auth. account holder)</li> <li>\ud83d\udcdd Sometime mutual authentication is used (both parties authenticating each other simultaneously) to prevent MITM attacks</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#access-control-mechanisms","title":"Access Control Mechanisms","text":""},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#mandatory-access-control-mac","title":"Mandatory access control MAC","text":"<ul> <li>Much more restrictive</li> <li>Access determined by security classification</li> <li>Each subject and object has a label, operating system determines if access is granted</li> <li>also implements \"need to know\" - just because a subject has appropriate clearance, does not mean they will be able to access</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#discretionary-access-control-dac","title":"Discretionary access control DAC","text":"<ul> <li>owner of object determines access levels</li> <li>ACLs (access control lists)</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#role-based-access-control-rbac","title":"Role-based access control RBAC","text":"<ul> <li>doesn't use ACLs, uses roles (like AD groups)</li> <li>users are assigned to roles and roles are assigned access</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#rule-based-access-control-rbac","title":"Rule-based access control RBAC","text":"<ul> <li>Uses ACLs but adds rules into ACLs</li> <li>MAC can use rule-based for implementation</li> <li>rules can be things like dates/times access is allowed</li> <li>users are not allowed to change rules</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#attribute-based-access-control-abac","title":"Attribute-based access control (ABAC)","text":"<ul> <li>attributes/specific elements of the data/object are used to determine access</li> <li>e.g. if a patient has a certain attribute (is receiving certain treatment), that determines which doctors/staff can access</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#auditing","title":"Auditing","text":""},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#risk-based-issues","title":"risk based issues","text":"<p>\ud83d\udcdd audit related risk:</p> <ol> <li>inherent risk: inherent error rate before controls</li> <li>detection risk: audit will not detect it</li> <li>control risk: controls will not detect or prevent in a timely fashion</li> </ol>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#organizational-characteristics","title":"Organizational characteristics","text":"<p>Examples:</p> <ul> <li>organizational history</li> <li>business env</li> <li>supervisory issues</li> </ul> <p>organizational security elements:</p> <ul> <li>roles and responsibilities</li> <li>separation of duties</li> <li>training and qualifications</li> <li>change mgmt</li> <li>control mgmt</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#internal-security-reqs","title":"Internal security reqs","text":"<p>Items used by the system to protect data and communications, for example:</p> <ul> <li>protect audit logs</li> <li>manage data loss prevention elements</li> <li>monitor internal system traffic</li> <li>monitor internal controls</li> <li>protect configuration files</li> </ul>"},{"location":"02-Secure-Software-Requirements/01-Policy-Decomposition/#external-security-reqs","title":"External security reqs","text":"<p>statutory and regulatory regulations, contractual obligations, for example:</p> <ul> <li>use security controls to manage external connections</li> <li>manage external connections and authentication</li> <li>content filtering and proxies to protect against web-based threats</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/","title":"Data Classification and Categorization","text":""},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#data-classification","title":"Data Classification","text":"<p>types of classification:</p> <ul> <li>state</li> <li>use</li> <li>importance</li> </ul> <p>classification is for risk management - reduce costs associated with protecting data</p> <ul> <li>match level of protection and cost with value of asset</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#data-states","title":"Data States","text":"<ul> <li>at rest</li> <li>being created</li> <li>in transit</li> <li>being changed/deleted</li> </ul> <p>data storage location should be considered as well</p>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#data-usage","title":"Data usage","text":"<ul> <li>determining how it is used can help determine how it should be shared (or not)</li> </ul> <p>Usage classifications</p> <ul> <li>Internal - created, computed, stored (in memory) within application</li> <li>Input - read into system and possibly stored</li> <li>Output - written to output destination</li> </ul> <p>Sensitivity categories</p> <ul> <li>Security-sensitive - subset of data, very valuable to attacker</li> <li>PII</li> <li>Hidden - concealed using obfuscation to protect from unauthorized disclosure</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#data-risk-impact","title":"Data Risk Impact","text":"<ul> <li>\ud83d\udcdd labeled according to risk if lost (high, medium, low)</li> <li>will differ from firm to firm</li> <li>\ud83d\udcdd impact considerations include cost, operation impact, people impact, customer impact</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#data-ownership","title":"Data ownership","text":"<ul> <li>data is not owned by a person, it is owned by the enterprise</li> <li>data is assigned to people for stewardship/ownership for practical reasons</li> <li>ownership is business driven</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#owner","title":"Owner","text":"<ul> <li>acts in the interests of the enterprise</li> <li>determines who has what access</li> <li>owner != custodian (e.g. CFO owns accounting records but DBA can make direct changes)</li> <li>\ud83d\udcdd data owners define data classification, authorized users, access criteria, and security controls</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#custodian","title":"Custodian","text":"<ul> <li>ensure processes safely transport, manipulate, and store data</li> <li>ensure data management processes (set by owner) are followed</li> <li>\ud83d\udcdd perform backups, data retention, disposal</li> <li>\ud83d\udcdd manage anything else (e.g. security controls) defined by owner</li> <li>custodians may not need read access</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#labeling","title":"Labeling","text":""},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#sensitivity","title":"Sensitivity","text":"<ul> <li>built around business purpose</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#impact","title":"Impact","text":"<ul> <li>wider concern than sensitivity</li> <li>includes loss, disclosure, and alteration</li> <li>three levels (high, medium or moderate, low) - each level should be clearly defined</li> <li>\ud83d\udcdd NIST FIPS 199 and SP 800-18 provide framework for classifying based on CIA</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#clearly-defining-levels","title":"Clearly Defining levels","text":"<ul> <li>high: set high enough that a small number of data elements are included</li> <li>financial limits and customer impact vary, each company needs to decide for itself</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#types-of-data","title":"Types of data","text":""},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#structured","title":"Structured","text":"<ul> <li>has a defined structure that can be parsed, sorted, searched</li> <li>\ud83d\udcdd is not determined by where it is stored, but how<ul> <li>\ud83d\udcdd look for relationships between data elements</li> </ul> </li> </ul> <p>examples:</p> <ul> <li>tables in a database</li> <li>formatted file structures</li> <li>XML</li> <li>JSON</li> <li>certain text files like log files</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#unstructured","title":"Unstructured","text":"<ul> <li>not easily parsed/searched</li> <li>more difficult to modify outside originating application (word docs, pdfs)</li> <li>majority of data is unstructured</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#data-lifecycle","title":"Data lifecycle","text":"<ul> <li>cost of storing data is still a resource issue despite lower costs</li> <li>must be managed from backup, business continuity, disaster recovery perspective</li> </ul>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#generation","title":"Generation","text":"<p>if data is going to be persistent, need to label, classify, protect</p>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#retention","title":"Retention","text":"<p>if retained, must have metadata defined such as:</p> <ul> <li>data owner</li> <li>purpose of storing</li> <li>level of protection</li> <li>length of storage (retention policy)</li> </ul> <p>protection must also consider how to protect backups and copies for DR</p> <p>System logs: are considered important from a legal/compliance perspective, often have sensitive info that needs to be protected</p>"},{"location":"02-Secure-Software-Requirements/02-Data-Classification-and-Categorization/#disposal","title":"Disposal","text":"<p>primary purposes of disposal:</p> <ol> <li>conserve resources</li> <li>limit liabilities</li> </ol> <p>\ud83d\udcdd Length of storage is determined by:</p> <ol> <li>business purpose</li> <li>compliance</li> </ol> <p>Legal hold data is not subject to normal disposal procedures</p>"},{"location":"02-Secure-Software-Requirements/03-Requirements/","title":"Requirements","text":""},{"location":"02-Secure-Software-Requirements/03-Requirements/#functional-requirements","title":"\ud83d\udcdd Functional Requirements","text":"<ul> <li>business reqs</li> <li>IT reqs (e.g. database, environment, DR/BCP)</li> <li>org reqs (e.g. coding standards, maintainability)</li> <li>security reqs</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#role-and-user-definitions","title":"Role and User Definitions","text":"<ul> <li>which user groups are allowed access, and to what functionality</li> <li>part of the use-case definition</li> <li>users = subjects</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#objects","title":"Objects","text":"<ul> <li>ensures members of dev team can use common set of objects and control appropriately</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#activitiesactions","title":"Activities/Actions","text":"<ul> <li>Each object in a system should have all possible activities/actions defined + documented</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#subject-object-activity-matrix","title":"Subject-Object-Activity Matrix","text":"<ul> <li>\ud83d\udcdd helps establish relationships between users and objects</li> <li>creates list of allowable actions and another list of denied actions</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#use-cases","title":"Use cases","text":"<ul> <li>a specific example of an intended behavior of the system, usually for complex/confusing/ambiguous situations</li> <li>not intended for all subject-object interactions</li> <li>not a substitute for documenting specific reqs</li> <li>\ud83d\udcdd graphical format that shows intended behavior (ellipses) for actors (stick figures)</li> <li>\ud83d\udcdd best for business reqs that are poorly defined</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#abuse-cases-inside-and-outside-adversaries","title":"Abuse cases (inside and outside adversaries)","text":"<ul> <li>form of use case but for the specifically prohibited</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#safecode","title":"SAFECode","text":"<ul> <li>development and distribution use cases - free, published PDF</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#sequencing-and-timing-issues","title":"Sequencing and Timing Issues","text":"<ul> <li>race conditions, infinite loops</li> <li>Means system is vulnerable to a Time of Check/Time of Use (TOC/TOU) attack<ul> <li>\ud83d\udcdd system does not use the value right after it checks the value, allowing for unauthorized manipulation</li> </ul> </li> <li>\ud83d\udcdd To avoid race conditions, first identify race window and then design so processes are not called concurrently (mutual exclusion)</li> <li>\ud83d\udcdd infinite loops: caused by complex conditional logic with unhandled situations - all conditions in a nested loop should be handled in a positive fashion</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#secure-coding-standards","title":"Secure Coding Standards","text":"<ul> <li>Secure SDLC includes controlling processes and making repeatable</li> <li>Adopt secure development frameworks as part of SDLC</li> <li>\ud83d\udcdd each function should practice complete error mitigation</li> <li>logging standards for what, where, when</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#operational-requirements","title":"Operational Requirements","text":"<ul> <li>enterprise systems need to interact with and function alongside many other systems</li> <li>complete SDLC solution: secure by design, secure by default, secure in deployment<ul> <li>default configuration should be secure</li> </ul> </li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#deployment-environment","title":"Deployment environment","text":"<ul> <li>software is deployed to env that best suits its maintainability, data access, and access to needed services</li> <li>follow corporate standards for seamless inter-connectivity</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#requirements-traceability-matrix-rtm","title":"Requirements Traceability Matrix (RTM)","text":"<ul> <li>\ud83d\udcdd track and manage reqs and implementation details</li> <li>document relationships b/w security reqs, controls, and test/verify efforts</li> <li>predefined reqs for infra, security, data sources, etc for dev teams</li> </ul>"},{"location":"02-Secure-Software-Requirements/03-Requirements/#connecting-the-dots","title":"Connecting the dots","text":"<ul> <li>easiest reqs are the features asked for</li> <li>also need to document implied reqs</li> <li>if the dev team should do something, needs to be listed in project reqs</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/","title":"Design Processes","text":""},{"location":"03-Secure-Software-Design/01-Design-Processes/#attack-surface-evaluation","title":"Attack Surface Evaluation","text":"<ul> <li>includes code, input fields, protocols, interfaces, files, and services</li> <li>higher attack surface != bad code, it's just a measure of how many things can be attacked</li> <li>turning off unused/unneeded features will minimize attack surface</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#attack-surface-management","title":"Attack Surface Management","text":"<ul> <li>measure # of ways it can be accessed</li> <li>root cause of old/prev vulns can help fix them, prevent future, and determine attack surface</li> <li>elements are not necessarily vulns, but hackers will attempt to compromise</li> <li>cannot compare between software</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#attack-surface-minimization","title":"Attack Surface Minimization","text":"<ul> <li>turning off unnecessary elements (off by default)</li> <li>only on when needed (certain users/times)</li> <li>least privilege</li> <li>document minimization throughout dev process<ul> <li>help lower defaults at deployment</li> <li>allow customer to make decisions about options</li> </ul> </li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#threat-modeling","title":"Threat Modeling","text":"<ul> <li>team effort</li> <li>identify and document threats</li> <li>describe mitigations</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#threat-model-development","title":"Threat Model Development","text":""},{"location":"03-Secure-Software-Design/01-Design-Processes/#identify-security-objectives","title":"Identify Security Objectives","text":"<ul> <li>security AND privacy</li> <li>business rationale for obtaining/storing data</li> <li>dev team should not decide if/how to protect data - won't have visibility/breadth to know all threats</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#system-decomposition","title":"System Decomposition","text":"<ul> <li>model system design using security reqs/objectives (data flow diagram is best)</li> <li>include all processes, data stores, data flows</li> <li>call out trust boundaries (where privilege changes)</li> <li>for larger systems, break down DFD into scenario-based pieces</li> <li>list/describe assumptions and dependencies</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#threat-identification","title":"Threat Identification","text":"<ul> <li>use STRIDE to create threat model</li> </ul> Threat Security Property Spoofing Authentication Tampering Integrity Repudiation Non-repudiation Information Disclosure Confidentiality Denial of Service Availability Elevation of Privilege Authorization"},{"location":"03-Secure-Software-Design/01-Design-Processes/#mitigation-analysis","title":"Mitigation Analysis","text":""},{"location":"03-Secure-Software-Design/01-Design-Processes/#four-types-in-order-of-best-to-worst","title":"Four types (in order of best to worst)","text":"<ol> <li>redesign to eliminate (generally early in SDL)</li> <li>apply standard mitigation (e.g. ACL)</li> <li>invent mitigation</li> <li>accept vuln</li> </ol> <ul> <li>attack tree model: help one understand threat</li> <li>also need to prioritize threats</li> <li>DREAD (damage potential, reproducibility, exploitability, affected users, discoverability) - 0 to 10</li> <li>can be mapped to probability impact model (reproducibility + exploitability + discoverability) and (damage potential + affected users)</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#threat-model-validation","title":"Threat Model Validation","text":"<ul> <li>validate threat model at each SDL gate</li> <li>do threats describe the attack and impact in detail relevant to app?</li> <li>are mitigations associated with a threat and described in detail relevant to app?</li> <li>dependencies</li> <li>security functions of deps</li> <li>assumptions documented</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#control-identification-and-prioritization","title":"Control Identification and Prioritization","text":"<ul> <li>prioritize enterprise security controls - it is more efficient (eliminates duplicate efforts)</li> <li>use security of existing protocols (HTTPS, SSH)</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#risk-assessment-for-code-reuse","title":"Risk Assessment for Code Reuse","text":"<ul> <li>using old code/libraries should be scrutinized just like new code</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#documentation","title":"Documentation","text":"<ul> <li>threat modeling and attack surface minimization docs can be very valuable if kept up to date</li> </ul>"},{"location":"03-Secure-Software-Design/01-Design-Processes/#design-and-architecture-technical-review","title":"Design and Architecture Technical Review","text":"<ul> <li>is the SDL achieving the desired objectives?</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/","title":"Design Considerations","text":""},{"location":"03-Secure-Software-Design/02-Design-Considerations/#application-of-methods-to-address-core-security-concepts","title":"Application of Methods to Address Core Security Concepts","text":""},{"location":"03-Secure-Software-Design/02-Design-Considerations/#confidentiality-integrity-and-availability","title":"Confidentiality, Integrity, and Availability","text":"<ul> <li>need to be considered/added during design phase</li> <li>Examples of tools:<ul> <li>Confidentiality -&gt; encryption</li> <li>Integrity -&gt; hashing</li> <li>Availability -&gt; recovery</li> </ul> </li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#confidentiality","title":"Confidentiality","text":"<ul> <li>data at rest usually encrypted differently than data in transit</li> <li>data needed to be confidential in use (encryption key), requires specific attention</li> <li>after elements needing to be kept confidential are determined, next need to determine authorized parties</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#integrity","title":"Integrity","text":"<ul> <li>controls update and delete</li> <li>first aspect is applying controls (e.g. ACLs)</li> <li>second aspect (just as important) is determining if data has been altered<ul> <li>digests should be stored and transmitted separately</li> </ul> </li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#availability","title":"Availability","text":"<ul> <li>system is available to authorized users when appropriate</li> <li>many options including backups, data replication, fail-overs<ul> <li>just need to determine the need and write a requirement</li> </ul> </li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#authentication-authorization-and-auditing","title":"Authentication, Authorization, and Auditing","text":"<ul> <li>generally, best to integrate with the existing enterprise environment and/or operating system</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#authentication","title":"Authentication","text":"<ul> <li>if incorrect, everything else is wrong</li> <li>determine level of confidence needed</li> <li>use OS methods when possible, otherwise follow design patterns</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#authorization","title":"Authorization","text":"<ul> <li>use OS methods when possible, otherwise follow design patterns</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#accounting-audit","title":"Accounting (Audit)","text":"<ul> <li>logging activity</li> <li>during design, determine what should be logged and when</li> <li>include error trapping and log what devs need to debug problem</li> <li>if sensitive data is logged, encryption is needed</li> <li>don't log data like PII or paths/filenames</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#secure-design-principles","title":"Secure Design Principles","text":"<ul> <li>security designer uses information from attack surface analysis and threat model</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#good-enough-security","title":"Good Enough Security","text":"<ul> <li>security should match risk associated with potential vulnerability</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#least-privilege","title":"Least Privilege","text":"<ul> <li>natural set of defenses when unexpected things happen</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#separation-of-duties","title":"Separation of Duties","text":"<ul> <li>useful when multiple conditions must be met</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#defense-in-depth","title":"Defense in Depth","text":"<ul> <li>multiple overlapping defenses, dissimilar in nature (e.g. encryption and ACLs)</li> <li>one of the oldest security principles</li> <li>wider range of threats more efficiently</li> <li>Every piece of software can be compromised/bypassed in some way</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#fail-safe","title":"Fail Safe","text":"<ul> <li>what happens when an element fails?</li> <li>degrade gracefully and return to normal through the shortest path</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#economy-of-mechanism","title":"Economy of Mechanism","text":"<ul> <li>Smaller and simpler = easier to secure</li> <li>Extensibility and reuse improve stability</li> <li>simple to troubleshoot, expand, use, and administer</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#complete-mediation","title":"Complete Mediation","text":"<ul> <li>perform authorization checks for sensitive operations</li> <li>don't assume a subject has permission</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#open-design","title":"Open Design","text":"<ul> <li>open communication</li> <li>accessible and understandable designs</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#least-common-mechanism","title":"Least Common Mechanism","text":"<ul> <li>reusing existing components can create pathways between users/processes</li> <li>determine balance between reuse and separation</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#psychological-acceptability","title":"Psychological Acceptability","text":"<ul> <li>users are key to system and security</li> <li>if security obstructs the user and user disagrees, user will find a workaround</li> <li>ensure abnormal system behavior is comprehensible to the user (i.e. don't say, \"contact your sysadmin\")</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#weakest-link","title":"Weakest Link","text":"<ul> <li>analyze local and system views of an application</li> <li>prevent local errors from becoming system failures</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#leverage-existing-components","title":"Leverage Existing Components","text":"<ul> <li>reduces costs and simplifies programs but failures have larger footprints</li> <li>legacy code and 3rd party code still need security reviews</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#single-point-of-failure","title":"Single Point of Failure","text":"<ul> <li>single failure should not result in a system failure</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#inter-connectivity","title":"Inter-connectivity","text":""},{"location":"03-Secure-Software-Design/02-Design-Considerations/#session-management","title":"Session Management","text":"<ul> <li>prevent unauthorized party taking control of authorized communication</li> <li>cross-party disclosure should not occur</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#exception-management","title":"Exception Management","text":"<ul> <li>communicate error to user and log information</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#configuration-management","title":"Configuration Management","text":"<ul> <li>secure configuration files/elements</li> </ul>"},{"location":"03-Secure-Software-Design/02-Design-Considerations/#interfaces","title":"Interfaces","text":"<ul> <li>determine method and level of integration with enterprise resources</li> <li>in-band vs out-of-band management of application</li> <li>creating separate management interface vs sending information to enterprise management system</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/","title":"Securing Commonly Used Architecture","text":""},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#distributed-computing","title":"Distributed Computing","text":"<ul> <li>affordable, smaller, powerful computing solutions led to more distributed computing architecture</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#client-server","title":"Client Server","text":"<ul> <li>server: processing and storage for numerous users</li> <li>client (thin or thick/fat): single user, fat clients do most of processing themselves</li> <li>multiple machines for processing increases need for security</li> <li>\"n-tier\" model (n = # of application levels doing work)<ul> <li>user level, presentation level, business level, data access level, database level</li> </ul> </li> <li>cloud computing is an extreme case of client server. n-tier model can be implemented in different cloud models (SaaS, PaaS, IaaS)</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#peer-to-peer","title":"Peer-to-peer","text":"<ul> <li>file sharing and communication based systems</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#message-queuing","title":"Message Queuing","text":"<ul> <li>helps manage throughput and guarantee delivery</li> <li>can also help with logging, security, and point to multi-point</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#service-oriented-architecture-soa","title":"Service-Oriented Architecture (SOA)","text":"<ul> <li>distributed with specific characteristics<ul> <li>platform neutrality</li> <li>interoperability</li> <li>modularity and reusability</li> <li>abstracted business functionality</li> <li>contract-based interfaces</li> <li>discoverability</li> </ul> </li> <li>several technologies like WS</li> <li>most SOA uses XML</li> <li>SOAP and REST and two common protocols for messaging in the ESB (enterprise service bus)</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#enterprise-service-bus","title":"Enterprise Service Bus","text":"<ul> <li>monitors and controls message routing</li> <li>centralized architecture for communication between producers and consumers</li> <li>can translate/transform communications</li> <li>can convert between protocols (REST, JAVA, SOAP, etc)</li> <li>handle defined events</li> <li>perform message queuing and data flow mapping</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#web-services","title":"Web Services","text":"<ul> <li>machine readable description of the interface - web services description language (WSDL)</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#rest","title":"REST","text":"<ul> <li>stateless manner</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#json","title":"JSON","text":""},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#universal-description-discovery-and-integration-uddi","title":"Universal Description, Discovery, and Integration (UDDI)","text":"<ul> <li>universal, platform-independent</li> <li>dynamically discover and invoke web services</li> <li>XML, protocol based registry that services can list themselves on worldwide</li> <li>never widely adopted, generally only found inside orgs</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#rich-internet-applications-rias","title":"Rich Internet Applications (RIAs)","text":"<ul> <li>application with characteristics of a desktop application delivered over the internet (Facebook, many websites today)</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#client-side-exploitsthreats","title":"Client-Side Exploits/Threats","text":"<ul> <li>!! input validation !!</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#remote-code-execution","title":"Remote Code Execution","text":"<ul> <li>consequence of architectural decision that there is no distinction between code and data</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#pervasiveubiquitous-computing","title":"Pervasive/Ubiquitous Computing","text":"<ul> <li>IOT - seldom have security capabilities</li> <li>each element/device of the system needs to be self-sufficient and self-reliant for security, safety, and stability</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#wireless","title":"Wireless","text":"<ul> <li>developers need to take responsibility for security of transmitted data - not expect the network to be secure</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#location-based","title":"Location-Based","text":"<ul> <li>A user's location can be abused</li> <li>not all sensitive data is easily identified as sensitive - need to consider how it could be abused</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#constant-connectivity","title":"Constant Connectivity","text":""},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#radio-frequency-identification-rfid","title":"Radio Frequency Identification (RFID)","text":"<ul> <li>mostly used for contactless inventory</li> <li>range from few meters to hundreds of meters (active, battery powered transponders)</li> <li>radio frequency use has regulatory reqs (differs by country)</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#near-field-communication-nfc","title":"Near-Field Communication (NFC)","text":"<ul> <li>RF over very short distances (few inches)</li> <li>no setup for the user</li> <li>sometimes used to initiate/bootstrap higher bandwidth transfers</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#sensor-networks","title":"Sensor Networks","text":"<ul> <li>physical and environmental (rainfall, weather, communication efficiency, etc)</li> <li>individual elements are called nodes</li> <li>architecture depends on communication technology and objectives of network</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#mobile-applications","title":"Mobile Applications","text":"<ul> <li>built with consideration of native constraints of the device</li> <li>mobile apps can generally access a lot of information stored on the device</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#integration-with-existing-architectures","title":"Integration with Existing Architectures","text":"<ul> <li>modern enterprise will never have one form of architecture</li> <li>cross-integration allows data reuse and increases utility of enterprise architecture</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#cloud-architectures","title":"Cloud Architectures","text":"<p>term is new, concept has been in use for decades</p> <ul> <li>on-demand self-service</li> <li>broad network access</li> <li>resource pooling</li> <li>rapid elasticity</li> <li>measured service</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#four-cloud-deployment-models","title":"Four cloud deployment models","text":"<ol> <li>Private cloud (one entity)</li> <li>Public cloud</li> <li>Community cloud (membership defined by shared concerns/use cases)</li> <li>hybrid cloud (combination that remains separate but has common technology)</li> </ol>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#saas","title":"SaaS","text":"<ul> <li>need to plan for and consider vendor use/storage of client data</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#paas","title":"PaaS","text":"<ul> <li>can include SaaS and IaaS elements</li> <li>as scale increases, so does operational savings</li> </ul>"},{"location":"03-Secure-Software-Design/03-Securing-Commonly-Used-Architecture/#iaas","title":"IaaS","text":""},{"location":"03-Secure-Software-Design/04-Technologies/","title":"Technologies","text":""},{"location":"03-Secure-Software-Design/04-Technologies/#authentication-and-identity-management","title":"Authentication and Identity Management","text":""},{"location":"03-Secure-Software-Design/04-Technologies/#identity-management-idm-and-identity-and-access-management-iam","title":"Identity Management (IDM) and Identity and Access Management (IAM)","text":"<ul> <li>policies, processes, technologies used to manage identity info</li> <li>provisioning, mgmt, and deprovisioning of identities</li> <li>a foundational element is protecting the secret yet making it usable</li> <li>audited annually under SOX section 404</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#authentication","title":"Authentication","text":"<ul> <li>typically authentication system is the underlying operating system aspect, not a third party application</li> <li>integrates with AuthZ system once successful</li> <li>Federated ID systems allow connection to systems through known system (Facebook, Microsoft, etc)<ul> <li>Relying party (RP) and Identity Provider (IdP)</li> </ul> </li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#credential-management","title":"Credential Management","text":"<ul> <li>all activities should be logged</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#x509-credentials","title":"X.509 Credentials","text":"<ul> <li>manipulating certificates used to transfer asymmetric keys</li> <li>IETF PKIX (public key infrastructure X.509)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#single-sign-on","title":"Single Sign-On","text":"<ul> <li>two most popular are Kerberos (LDAP domain) and SAML - OpenID is also a proven protocol for SSO</li> <li>primary objective of SSO is convenience</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#flow-control-proxies-firewalls-middleware","title":"Flow Control (Proxies, Firewalls, Middleware)","text":""},{"location":"03-Secure-Software-Design/04-Technologies/#firewalls","title":"Firewalls","text":"<ul> <li>network level firewall (stateless) - think VPC/intranet</li> <li>next-generation firewalls (often stateful and look at multiple packets) - more granularity</li> <li>firewalls operate on a packet level</li> <li>can be stateless or stateful</li> <li>limited by network architecture (e.g. if numerous paths for traffic to flow, difficult or even impossible to place firewalls)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#proxies","title":"Proxies","text":"<ul> <li>security device like a firewall, but can also have a wide range of capabilities</li> <li>can include caching for performance</li> <li>can work at the protocol level (HTTP) whereas firewalls only know IP, TCP, UDP</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#application-firewalls","title":"Application Firewalls","text":"<ul> <li>firewall proxy</li> <li>PCI Data Security Standard req: web apps either need a WAF or code reviews</li> <li>most can work on ingress and egress traffic</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#queuing-technology","title":"Queuing Technology","text":"<ul> <li>synchronous or asynchronous</li> <li>guaranteed transport or best effort (TCP and UDP, respectively)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#logging","title":"Logging","text":"<ul> <li>challenges: what to log, how to store</li> <li>must meet compliance criteria (HIPAA, SOX, PCI DSS, EOC)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#syslog","title":"Syslog","text":"<ul> <li>IETF approved protocol</li> <li>UNIX format for sending logs across network</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#data-loss-prevention","title":"Data Loss Prevention","text":"<ul> <li>protect against exfiltration of data</li> <li>look for specific traffic (size, destination, data elements, etc)</li> <li>attackers often use encryption to make it difficult to view what data is being stolen</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#virtualization","title":"Virtualization","text":"<ul> <li>reduced cost of servers by consolidating</li> <li>improved efficiencies from administrative ease</li> <li>portability and isolation</li> <li>operational agility (e.g. scaling in the cloud)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#digital-rights-management","title":"Digital Rights Management","text":"<ul> <li>technology used to protect intellectual property</li> <li>copy protection, usage rights, authenticity, integrity</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#three-entities-in-drm","title":"three entities in DRM","text":"<ol> <li>users</li> <li>contents</li> <li>rights</li> </ol> <ul> <li>DRM uses Rights Expression Language (REL) - XML, machine readable</li> <li>not perfect, still has issues balancing protection and usability</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#trusted-computing","title":"Trusted Computing","text":"<ul> <li>ensure computer behaves consistently as expected</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#tcb-trusted-computing-base","title":"TCB (trusted computing base)","text":"<ul> <li>focused mainly on privilege escalation</li> <li>each element should require authorization to receive an increase in privilege</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#tpm-trusted-platform-module","title":"TPM (trusted platform module)","text":"<ul> <li>hardware implementation of cryptographic functions on motherboard</li> <li>level of security deeper than OS and virtually tamper-proof</li> <li>controversy: could secure machine from owner or regulate permitted software</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#malware","title":"Malware","text":"<ul> <li>software with malicious intent</li> <li>can be designed so that it is not observable by the user and is virtually undetectable</li> <li>malware requires a vuln in a software system</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#code-signing","title":"Code Signing","text":"<ul> <li>digital signature</li> <li>verify author, integrity, etc</li> <li>mature technology</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#database-security","title":"Database Security","text":"<ul> <li>capabilities include those below as well as<ul> <li>stored procedures - access to specific elements based on rules</li> <li>backup and replication</li> </ul> </li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#encryption","title":"Encryption","text":"<ul> <li>using DBMS functions or external tools</li> <li>primary keys cannot be obfuscated/encrypted - don't use PII/PHI as keys</li> <li>things to consider for encryption strategy<ul> <li>level of risk classification for data</li> <li>usage pattern of data and protection in transit and use</li> <li>risk classification for specific elements of data - does it differ?</li> <li>how encryption is used across enterprise</li> <li>what encryption options are available to dev team?</li> </ul> </li> <li>members of dev team need to know which data elements have regulations around encryption</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#triggers","title":"Triggers","text":"<ul> <li>trigger scripts based on database activity</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#views","title":"Views","text":"<ul> <li>type of data structure to give different access based on subject</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#programming-language-environment","title":"Programming Language Environment","text":"<ul> <li>language used for development is rarely what is used on the target computer (compilers, interpreters, or both affect this)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#compilers","title":"Compilers","text":"<ul> <li>faster execution</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#two-sub-processes","title":"two sub-processes","text":"<ol> <li>compiling: convert source code into processor-specific codes</li> <li>linking: connect libraries, dependency files, resources<ol> <li>static linking: increased executable size, everything is copied into it</li> <li>dynamic linking: place names and locations of dependencies which are resolved at runtime     1. creates risk for hijacked dependent programs</li> </ol> </li> </ol>"},{"location":"03-Secure-Software-Design/04-Technologies/#interpreters","title":"Interpreters","text":"<ul> <li>intermediary program to execute source code on target machine</li> <li>slower execution but fast change between revisions (no compiling/linking)</li> <li>converted into executable line by line at runtime</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#hybrid","title":"Hybrid","text":"<ul> <li>compiled into intermediary stage to be interpreted at runtime</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#clr-net","title":"CLR (.NET)","text":"<ul> <li>application can be built with multiple languages and compiled with just-in-time compiler</li> <li>CLR adds garbage collection, type safety, index checking, sandboxing, more</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#jvm","title":"JVM","text":"<ul> <li>Java is compiled into byte code</li> <li>JRE contains JVM and standard libs</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#compiler-switches","title":"Compiler Switches","text":"<ul> <li>manage memory, stack protection, exception handling, etc</li> <li>security team should define compiler switch options for use in SDLC</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#sandboxing","title":"Sandboxing","text":"<ul> <li>isolate code from direct contact with target system</li> <li>execute un-trusted code, code from guests, unverified programs</li> <li>operate like a VM</li> <li>protection depends on level of isolation and mediation</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#managed-vs-un-managed-code","title":"Managed vs Un-managed code","text":""},{"location":"03-Secure-Software-Design/04-Technologies/#managed","title":"Managed","text":"<ul> <li>executed in a intermediate system that has controls (Java, .NET)</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#un-managed","title":"Un-managed","text":"<ul> <li>executed directly on target</li> <li>compiled for specific system</li> <li>significant performance advantages but things like memory, type safety, garbage collection, need to be managed by developer</li> <li>un-managed is more prone to risks</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#os","title":"OS","text":"<ul> <li>functional interface between applications and hardware</li> <li>real-time and embedded systems are simpler and leaner</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#embedded-systems","title":"Embedded Systems","text":"<ul> <li>hardware and software are coupled for a specific purpose</li> <li>PCs and servers are general purpose</li> <li>examples: watches, audio/video players, vehicles, etc</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#control-systems","title":"Control Systems","text":"<ul> <li>a type of embedded system for automated control of equipment</li> <li>many names - SCADA, Industrial Control Systems, Operational Technology</li> </ul>"},{"location":"03-Secure-Software-Design/04-Technologies/#firmware","title":"Firmware","text":"<ul> <li>software code held in a device</li> <li>wired in software so it is difficult to update or change<ul> <li>in many cases, is never updated or changed</li> </ul> </li> <li>held in nonvolatile memory, read-only memory, erasable programmable read only memory, or flash memory</li> <li>firmware holds operational code base</li> <li>in computers, firmware is the first step in startup process (BIOS - basic input output system)<ul> <li>BIOS is the interface between OS and hardware</li> <li>most computer makers replaced BIOS with more advanced version (UEFI - unified extensible firmware interface) around 2010</li> </ul> </li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/","title":"Common Software Vulnerabilities and Countermeasures","text":"<ul> <li>screening code for disallowed functions is best performed by static testing</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#cwe-common-weakness-enumerationssans-top-25-vuln-categories","title":"CWE (Common Weakness Enumerations)/SANS Top 25 Vuln Categories","text":"<ul> <li>hasn't been updated since 2011 but still relevant</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#owasp-vuln-categories","title":"OWASP Vuln Categories","text":"<ul> <li>dedicated to web applications</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#common-vulns-and-countermeasures","title":"Common Vulns and Countermeasures","text":""},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#injection-attacks","title":"Injection Attacks","text":"<ul> <li>SQL Injection<ul> <li>safest method is stored procedure</li> </ul> </li> <li>OS Command Injection</li> <li>Integer overflow/wraparound</li> <li>path traversal</li> <li>XSS</li> <li>CSRF</li> <li>LDAP</li> <li>XML</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#cryptography","title":"Cryptography","text":"<ul> <li>pay attention to algorithms and key length</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#input-validation","title":"Input Validation","text":"<ul> <li>buffer overflow<ul> <li>estimated that nearly half of historical exploits stem from buffer overflow</li> </ul> </li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#embedded-systems","title":"Embedded Systems","text":"<ul> <li>generally targeted for information disclosure or DoS</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/01-Common-Software-Vulnerabilities-and-Countermeasures/#side-channel-attack","title":"Side Channel Attack","text":"<ul> <li>comes from cryptographic world - attack against implementation, not algorithm</li> <li>use byproduct of a system</li> </ul> <p>Types:</p> <ul> <li>timing attacks and power attacks<ul> <li>analyze power/time used to make determination about what is happening</li> </ul> </li> <li>data remanence attacks<ul> <li>cooling RAM to access data after power turned off</li> </ul> </li> <li>electromagnetic attacks/acoustic attacks<ul> <li>reproduce what is on the screen or was typed on a keyboard</li> </ul> </li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/","title":"Defensive Coding Practices","text":""},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#declarative-vs-programmatic-imperative-security","title":"Declarative vs Programmatic (imperative) Security","text":"<ul> <li>early design decision</li> <li>Declarative<ul> <li>define the what</li> <li>Security is defined in the deployment, not the code itself</li> <li>Managed by ops team, not dev team</li> <li>more flexible security</li> </ul> </li> <li>Imperative<ul> <li>embedded into code</li> <li>less flexible/portable/reusable but allows for greater granularity</li> </ul> </li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#bootstrapping","title":"Bootstrapping","text":"<ul> <li>startup process when computer/program starts</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#cryptographic-agility","title":"Cryptographic Agility","text":"<ul> <li>allow for changes in crypto function (e.g. algorithm) without changing code</li> <li>also assists with international cryptography reqs</li> <li>early design decision</li> <li>important to use secure sessions</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#handling-configuration-parameters","title":"Handling Configuration Parameters","text":"<ul> <li>securing config files is an important design decision</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#memory-management","title":"Memory Management","text":"<ul> <li>shared responsibility between app and OS</li> <li>managed code applications (.NET, Java) handle memory management</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#type-safe-practice","title":"Type-safe Practice","text":"<ul> <li>type safety is linked to memory safety: cannot access arbitrary locations of memory</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#locality","title":"Locality","text":"<ul> <li>when a program references memory, other references are generally predictable and in close proximity</li> <li>several memory attacks take advantage of locality</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#error-handling","title":"Error Handling","text":""},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#exception-management","title":"Exception Management","text":"<ul> <li>if left to the OS to handle, privilege escalation and other issues can occur</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#interface-coding","title":"Interface Coding","text":"<ul> <li>need appropriate AuthN and AuthZ</li> <li>audit externally exposed, privileged operations</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#primary-mitigations","title":"Primary Mitigations","text":"<ul> <li>standard best practice mitigations:<ul> <li>lock down env</li> <li>establish/maintain control of inputs</li> <li>establish/maintain control of outputs</li> <li>assume external components can be undermined</li> <li>assume code can be read by anyone</li> <li>use libraries and frameworks that avoid introducing weaknesses</li> <li>use industry-accepted security features</li> <li>integrate security into the entire SDLC</li> <li>use mix of methods to find and prevent weaknesses</li> </ul> </li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#defensive-coding","title":"Defensive Coding","text":"<p>Foundational:</p> <ul> <li>attack surface reduction</li> <li>understand common coding vulns</li> <li>implement standard mitigations</li> </ul> <p>Other:</p> <ul> <li>code analysis</li> <li>code review</li> <li>versioning</li> <li>crypto agility</li> <li>memory mgmt</li> <li>exception handling</li> <li>interface coding</li> <li>managed code</li> </ul> <p>Exam tips:</p> <ul> <li>controlling concurrency (access to shared objects/race conditions)</li> <li>tokenization for sensitive data</li> </ul>"},{"location":"04-Secure-Software-Implementation-Programming/02-Defensive-Coding-Practices/#learning-from-past-mistakes","title":"Learning from Past Mistakes","text":"<ul> <li>security team should regularly update security reqs while considering errors from other companies</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/","title":"Security Quality Assurance Testing","text":"<p>quality = fitness for use according to requirements</p>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#standards-for-software-quality-assurance","title":"Standards for Software Quality Assurance","text":""},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#iso-9216","title":"ISO 9216","text":"<ul> <li>primary focuses: functionality, reliability, usability</li> <li>other: efficiency, maintainability, portability</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#sse-cmm","title":"SSE-CMM","text":"<ul> <li>systems security engineering capability maturity model (aka ISO/IEC 21827)</li> <li>de facto standard for evaluating security engineering capability in an org</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#osstmm","title":"OSSTMM","text":"<ul> <li>Open Source Security Testing Methodology Manual</li> <li>peer-reviewed, scientific methodology</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#five-sections","title":"five sections","text":"<ol> <li>data networks</li> <li>telecommunications</li> <li>wireless</li> <li>human (e.g. social engineering, security awareness training)</li> <li>physical security</li> </ol> <ul> <li>training classes exist</li> <li>methodology can assist in auditing</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#testing-methodology","title":"Testing Methodology","text":"<p>Test harness: means of documenting software, tools, test data, expected output, and configurations</p> <ul> <li>break testing into test suites for reuse</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#functional-testing","title":"Functional Testing","text":"<ul> <li>assess functionality as expected by end user</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#steps","title":"Steps","text":"<ol> <li>Identify functions (reqs)</li> <li>create test data</li> <li>determine expected output</li> <li>execute tests corresponding to functional reqs</li> <li>compare actual and expected</li> </ol>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#functional-testing-areas","title":"Functional Testing Areas","text":"<ul> <li>reliability</li> <li>logic</li> <li>performance</li> <li>scalability</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#unit-testing","title":"Unit Testing","text":"<ul> <li>functional logic</li> <li>understandable code</li> <li>reasonable vuln control and mitigation</li> <li>done early by dev team before dev phase is over</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#integrationsystems-testing","title":"Integration/Systems Testing","text":"<ul> <li>includes secure and proper data transfer between components in a system</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#performance-testing","title":"Performance Testing","text":"<ul> <li>load testing: performance under normal conditions</li> <li>stress testing: performance under overload conditions</li> <li>Recoverability: app's ability to restore itself to expected functionality after security is breached/bypassed</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#regression-testing","title":"Regression Testing","text":""},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#security-testing","title":"Security Testing","text":""},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#white-box-testing","title":"White-Box testing","text":"<ul> <li>full knowledge of code and components</li> <li>done early in dev cycle</li> <li>focus on structure of software and use/misuse</li> <li>high false positives</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#black-box-testing","title":"Black-Box testing","text":"<ul> <li>common for system-level tests and pen testing</li> <li>focus on behavior of app</li> <li>high false positives</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#grey-box-testing","title":"Grey-Box Testing","text":"<ul> <li>not total access to source code but understanding of inner workings</li> <li>rare outside of internal testing</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#environment","title":"Environment","text":"<ul> <li>interoperability of all components including:<ul> <li>credentials</li> <li>permissions</li> <li>access tokens</li> <li>data movement across trust boundaries</li> <li>etc</li> </ul> </li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#bug-tracking","title":"Bug Tracking","text":"<ul> <li>four types (same as options associated with risk):<ul> <li>removal of defect</li> <li>mitigation</li> <li>transfer of responsibility</li> <li>ignore</li> </ul> </li> <li>track bugs so they eventually get addressed</li> <li>logging bugs also provides metric of code quality</li> <li>defect categories:<ul> <li>bugs (coding errors)</li> <li>flaws (design error)</li> <li>behavioral anomalies (how app operates)</li> <li>errors/faults (outcome-based from other sources)</li> <li>vulns (things that can be manipulated to misuse system)</li> </ul> </li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#defects","title":"Defects","text":"<ul> <li>create defect database to track past and present issues</li> <li>help understand what not to do/what not to repeat</li> <li>provide testers with suggestions when looking for defects</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#bug-bar","title":"Bug Bar","text":"<ul> <li>set minimum level of quality for security at beginning of project</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#attack-surface-validation","title":"Attack Surface Validation","text":"<ul> <li>document actual attack surface through SDLC</li> </ul>"},{"location":"05-Secure-Software-Testing/01-Security-Quality-Assurance-Testing/#test-data-lifecyle-management","title":"Test Data Lifecyle Management","text":"<ul> <li>anonymization of production data iss very challenging and requires planning</li> </ul>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/","title":"Security Testing","text":""},{"location":"05-Secure-Software-Testing/02-Security-Testing/#scanning","title":"Scanning","text":"<p>Passive in nature</p> <p>Example: OS fingerprinting</p>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#attack-surface-analyzer","title":"Attack Surface Analyzer","text":"<p>Microsoft tool to analyze how Windows is impacted when app is installed</p>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#pen-testing","title":"Pen Testing","text":"<ul> <li>Active testing</li> <li>purpose: provide details to dev team so root cause can be fixed</li> </ul> <p>Steps:</p> <ol> <li>Recon (discovery, enumeration)</li> <li>attack and exploitation</li> <li>removal of evidence</li> <li>reporting</li> </ol>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#fuzzing","title":"Fuzzing","text":"<ul> <li>brute-force, large number of inputs</li> <li>network protocols, file protocols, web protocols</li> <li>most browser errors are found via fuzzing</li> <li>block-box, white-box, or grey-box</li> <li>tests input validation vulns (e.g. XSS, injection)</li> <li>both generation-based and mutation-based are used and have different advantages</li> </ul>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#simulation-testing","title":"Simulation Testing","text":"<ul> <li>test in a pre-prod env</li> <li>all aspects (config, firewall, OS, load/performance, etc)</li> </ul>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#testing-for-failure","title":"Testing for Failure","text":"<ul> <li>most testing is testing for failure - also important to test for incorrect values</li> </ul>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#crypto-validation","title":"Crypto Validation","text":"<ul> <li>crypto random numbers are essential - best from crypto libraries</li> </ul>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#fips-140-2","title":"FIPS 140-2","text":"<ul> <li>Federal Information Processing Standards</li> <li>selection of approved algorithms and implementation for federal gov</li> </ul>"},{"location":"05-Secure-Software-Testing/02-Security-Testing/#regression-testing","title":"Regression Testing","text":"<ul> <li>more important as software gets older</li> <li>one of most time consuming parts of software patches</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/","title":"Secure Lifecycle Management","text":""},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#introduction-to-acceptance","title":"Introduction to Acceptance","text":""},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#software-qualification-acceptance-testing","title":"Software Qualification (Acceptance) Testing","text":"<ul> <li>customer determines if software meets acceptance criteria</li> <li>assess contract, standard, and legal reqs under both normal and abnormal conditions</li> <li>cumulative failure profile<ul> <li>plot cumulative failures vs suitable time base</li> <li>most appropriately applied during acceptance phase</li> <li>negative slope indicates increasing reliability</li> </ul> </li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#qualification-testing-plan","title":"Qualification Testing Plan","text":"<ul> <li>scope, approach, resources, schedule</li> <li>design and execution of tests is normally defined in the contract</li> <li>goal: smallest # of test cases to sufficiently affirm quality and security of product</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#testing-plan-components","title":"Testing plan components","text":"<ol> <li>required features to test</li> <li>requisite load limits</li> <li>number/types of stress tests</li> <li>risk mitigation and security tests</li> <li>required performance levels</li> <li>interfaces to be tested</li> <li>test cases to address<ol> <li>who generates test designs/cases/procedures?</li> <li>who executes the tests?</li> <li>who builds/maintains test bed?</li> <li>who manages config?</li> <li>what are criteria for stopping testing?</li> <li>what are criteria for restarting testing?</li> <li>when will code be under change control/freeze?</li> <li>which tests will be under config mgmt?</li> <li>what level will anomaly reports be written for?</li> </ol> </li> </ol>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#qualification-testing-hierarchy","title":"Qualification Testing Hierarchy","text":"<ul> <li>activities at acceptance level:<ul> <li>design traceability anlsys</li> <li>design evaluation</li> <li>design interface anlsys</li> <li>test plan generation</li> <li>test design generation</li> </ul> </li> <li>evaluate documentation of each unit</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#pre-release-activities","title":"Pre-release Activities","text":"<ul> <li>total product assurance is not necessarily achievable due to complex and dynamic nature of software</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#implementing-pre-release-testing-process","title":"Implementing Pre-release testing process","text":"<ul> <li>software test plan describes objectives, scope, approach, and focus</li> <li>helps people outside testing group understand why and how</li> <li>detailed enough to be useful but not so much that those outside group cannot understand</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#completion-criteria","title":"Completion Criteria","text":"<ul> <li>progress milestones are used as evidence of readiness for delivery</li> <li>tangible outcome or action</li> <li>criteria can be decomposed into metrics</li> <li>ISO 9126<ul> <li>functionality</li> <li>reliability</li> <li>usability</li> <li>efficiency</li> <li>maintainability</li> <li>portability</li> </ul> </li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#risk-acceptance","title":"Risk Acceptance","text":"<ul> <li>properties to consider to stay secure within acceptable limits:<ul> <li>implicit/explicit safety reqs</li> <li>implicit/explicit security reqs</li> <li>degree of complexity</li> <li>performance factors</li> <li>reliability factors</li> </ul> </li> </ul> <p>Evaluation process should answer two questions</p> <ol> <li>what is level of certainty of risk (likelihood)?</li> <li>what is anticipated impact (loss)?</li> </ol> <ul> <li>risk assessment requires detailed knowledge of risks and consequences of software. Included in threat model which is created as part of SDLC</li> <li>threat picture/situational assessment: targeted risk assessments that only apply to known vulns at a specific time</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#post-release-activities","title":"Post-release Activities","text":"<ul> <li>typically not done by dev team</li> <li>best described as config mgmt</li> <li>first, perform complete audit of installed config</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#validation-and-verification","title":"Validation and Verification","text":"<ul> <li>also apply to all stages of software lifecycle</li> <li>activities are documented in the software validation and verification plan (SVVP)</li> <li>validation: are we building the correct product? (i.e. meets user reqs)</li> <li>verification are we building the product correctly? (i.e. proper software construction)</li> <li>the SVVP should specify administrative reqs for:<ul> <li>anomaly resolution and reporting</li> <li>exception/deviation policy</li> <li>baseline and config control procs</li> <li>standards practices and conventions adopted for guidance</li> <li>form of relevant docs, including plans, procs, cases, and results</li> </ul> </li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#management-vv","title":"Management V&amp;V","text":"<ul> <li>examine plans, schedules, reqs, methods for assessing suitability</li> <li>supports decisions about corrective actions, allocation of resources, and project scoping</li> <li>support mgmt personnel who are responsible for system</li> <li>discover and report variations from plans/procs</li> <li>may involve the following mgmt roles:<ul> <li>decision maker</li> <li>review leader</li> <li>review recorder</li> <li>mgmt staff</li> <li>tech staff</li> <li>customer/user rep</li> </ul> </li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#technical-vv","title":"Technical V&amp;V","text":"<ul> <li>eval product, reqs/design docs, code/test/user docs/manuals/release notes, build/install procs</li> <li>does product conform to specs? adhere to regs, standards, and plans? correctly implemented/changed?</li> <li>support customer's/supplier's technical/mgmt personnel</li> <li>discover/report defects and anomalies</li> <li>may involve following mgmt roles:<ul> <li>decision maker</li> <li>review leader</li> <li>review recorder</li> <li>tech staff/tech managers</li> <li>customer/user tech staff</li> </ul> </li> <li>should be scheduled as part of initial project planning</li> <li>ad hoc reviews may also be scheduled</li> </ul>"},{"location":"06-Secure-Lifecycle-Management/01-Secure-Lifecycle-Management/#independent-testing","title":"Independent Testing","text":"<ul> <li>carried out by disinterested third party so customer and supplier trust integrity</li> <li>often called IV&amp;V (audit)</li> <li>ensure customer/supplier have no influence over findings of testers</li> <li>items that may be audited:<ul> <li>plans</li> <li>contracts</li> <li>complaints</li> <li>procs</li> <li>reports/docs</li> <li>source code</li> <li>deliverables</li> </ul> </li> <li>conducted by single person (lead auditor)</li> <li>audit usually not initiated by producer</li> <li>closing meeting report includes:<ul> <li>prelim conclusions</li> <li>problems</li> <li>recommendations for remediation</li> </ul> </li> <li>once closing report is accepted, final report itemizes:<ul> <li>purpose and scope</li> <li>name of audited org</li> <li>software audited</li> <li>applicable regs/standards</li> <li>audit eval criteria</li> <li>observation list classifying anomalies as major/minor</li> <li>timing of audit follow-up activities</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/","title":"Secure Software Installation and Deployment","text":""},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#installation","title":"Installation","text":"<ul> <li>SDLC is broken into two phases: development and sustainment</li> <li>Sustainment includes: installation, deployment, operations, maintenance</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#installation-vv","title":"Installation V&amp;V","text":"<ul> <li>Use MITRE's Common Weakness Enumeration (CWE) to evaluate code</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#planning-for-operational-use","title":"Planning for Operational Use","text":""},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#bootstrapping","title":"Bootstrapping","text":"<ul> <li>set of ops that properly launch function and ensure continuing correctness</li> <li>\ud83d\udcdd aka booting - e.g. PC power on self-test (POST)<ul> <li>integrity is mandatory</li> </ul> </li> <li>implement error detection and correction</li> </ul> <ul> <li>\ud83d\udcdd version control: labeling software releases so end user knows what they are using</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-management","title":"Configuration Management","text":"<ul> <li>\ud83d\udcdd exercise rational control over changes to software</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#organizing-the-configuration-management-process","title":"Organizing the Configuration Management Process","text":"<p>Three separate roles</p> <ol> <li>customer role: maintenance of product after release</li> <li>supplier role: managing configuration prior to release<ol> <li>writes configuration management plan in conjunction with customer org</li> </ol> </li> <li>subcontractor role: if product developed through supply chain</li> </ol>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-management-plan","title":"Configuration Management Plan","text":"<ul> <li>should specify change management, baseline management, and verification management roles</li> <li>versioning, backup, check-in/check-out processes, change control</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-management-process","title":"Configuration Management Process","text":"<ul> <li>purpose: establish and maintain integrity of software items</li> </ul> <ul> <li>\ud83d\udcdd common way of tracking changes is through a configuration management database (CMDB)<ul> <li>also called configuration management system (CMS)</li> <li>CMS is required for ISO/IEC 15408 (common criteria) accreditation</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#process-implementation","title":"Process implementation","text":"<ul> <li>create a fully documented plan for the entire lifecycle of the configuration management process</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-identification","title":"Configuration identification","text":"<ul> <li>identify software items included in baselines</li> <li>create formal documentation with baseline version designations for each software item</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-control","title":"Configuration control","text":"<ul> <li>change management</li> <li>need authorization before changes are incorporated into baseline</li> <li>required for auditing</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-status-accounting","title":"Configuration status accounting","text":"<ul> <li>status and history for all controlled software items, including baselines</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#configuration-evaluation","title":"Configuration evaluation","text":"<ul> <li>certify correctness of change after change is complete</li> <li>use statement of work (SOW) to verify</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/01-Secure-Software-Installation-and-Deployment/#release-management-and-delivery","title":"Release management and delivery","text":"<p>Product Baseline Repositories:</p> <ol> <li>Controlled: current baseline, strictly controlled</li> <li>Dynamic: un-trusted baselines being developed by programmers</li> <li>Archive: past baselines, collective memory of the IT function</li> </ol>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/","title":"Secure Software Operations and Maintenance","text":"<ul> <li>Sustainment: post-coding operations and maintenance</li> <li>ISO 12207:2017 (software lifecycle processes) includes five processes<ul> <li>two of the five are operations and maintenance</li> <li>better to combine operations and maintenance into one process</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#secure-software-operations","title":"Secure Software Operations","text":"<ul> <li>operate software in intended environment</li> <li>one of the most expensive items in budget of an IT org</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#operations-process-implementation","title":"Operations Process Implementation","text":"<ol> <li>monitor and assure effective everyday use</li> <li>document and track problem reports and requests for change</li> </ol>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#connecting-operation-to-change","title":"Connecting operation to change","text":"<ul> <li>operations reports issues or requests for change to the configuration management team and product stakeholders</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#planning-for-secure-operation","title":"Planning for secure operation","text":"<ul> <li>secure sustainment of a product within a particular environment</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#operational-monitoring-and-control","title":"Operational monitoring and control","text":"<ul> <li>operations function is responsible for routine testing</li> <li>developer may need to operate new product concurrently with previous version for a specified period to ensure it conforms to requirements</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#customer-support","title":"Customer support","text":"<ul> <li>operations provides advice and product support to customers as needed<ul> <li>can also include scheduled training</li> </ul> </li> <li>each request and actions taken should be recorded as part of config mgmt process</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#ensuring-service-operation","title":"Ensuring service operation","text":"<ul> <li>demonstrate compliance with defined criteria/SLA</li> <li>should identify and monitor potential risks in performance</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#software-maintenance-process","title":"Software Maintenance Process","text":"<ul> <li>provide cost-effective modifications and support for all software in org's portfolio</li> <li>ad hoc services for org's stakeholders</li> </ul> <p>\ud83d\udcdd study security aspects of all maintenance activities</p>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#monitoring","title":"Monitoring","text":"<ul> <li>monitor system within target environment</li> <li>respond to incidents</li> <li>maintain trust among stakeholders that system is secure and operating correctly</li> <li>need to prioritize review of systems since it may be impossible to monitor everything completely</li> <li>professionals on review team should have a sustainment focus while also have technical aptitude to participate in design/code reviews</li> <li>also need to interpret existing test results to ensure they adhere to test plans</li> <li>software needs to expose alerts/logs in order to be monitored</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#incident-management","title":"Incident management","text":"<ul> <li>can be caused by anything from user errors to hacking/malicious activity</li> <li>reacting to unforeseen events add extra challenges because mitigation steps have not been planned in advance</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#monitoring-and-incident-identification","title":"Monitoring and incident identification","text":"<ul> <li>initiated when a potentially harmful event occurs</li> <li>purpose of incident identification: distinguish between vulnerability in code, exploit of software, and user error</li> <li>purpose of incident monitoring: identify as quickly as possible<ul> <li>can include tests, reviews, audits of logs, automated incident mgmt systems, dynamic testing tools, code scanners</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#incident-reporting-and-management-control","title":"Incident reporting and management control","text":"<ul> <li>report incident type and assessed impact to incident manager</li> <li>routine code defects should be reported as well as intentional things like trapdoors</li> <li>incident response team: trained specialists (like fire dept) that follow a process to ensure the best possible response<ul> <li>also limit additional damage and study circumstances to prevent future occurrence</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#anticipating-potential-incidents","title":"Anticipating potential incidents","text":"<ul> <li>incidents are either potential or active</li> <li>Potential incidents: defects that don't appear to have a present threat, unforeseen flaws, security vulnerabilities in OS/vendor software (e.g. Microsoft)</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#responding-to-active-incidents","title":"Responding to active incidents","text":"<ul> <li>incident response team handles and supervises patch/change to target system</li> <li>incident response process should be strategically planned and have flexibility in execution</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#establishing-a-structured-response","title":"Establishing a structured response","text":"<ul> <li>essential to develop procedures for precise steps to be taken for passive and active incidents</li> <li>include who is authorized to initiate incident response and how much authority is required to direct a response</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#ensure-enough-resources","title":"Ensure enough resources","text":"<ul> <li>deploy appropriate response and not overreact<ul> <li>start with a subset of resources and then decide if it needs to be escalated</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#managing-the-incident-response-team","title":"Managing the incident response team","text":"<ul> <li>team should include:<ul> <li>experienced team manager</li> <li>expert software analysts/programmers</li> <li>cybersecurity and computer crime specialists</li> <li>sometimes, legal/government/public affairs experts</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#problem-management","title":"Problem management","text":"<ul> <li>Type: corrective, improvement, preventative, adaptive action that might be required</li> <li>Scope: modification size, cost, time</li> <li>Criticality: impact of change on performance, safety, security of org</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#change-management","title":"Change management","text":"<ul> <li>primary purpose: protect enterprise from risk associated with changing functioning systems</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#patching","title":"Patching","text":"<ul> <li>can be labeled as patches, hot-fixes, quick fix engineering (QFE)</li> <li>what does patch repair and is it necessary to do so in prod?</li> <li>patches are often bundled together in service packs or included in release schedule</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#backup-recovery-archiving","title":"Backup, recovery, archiving","text":"<ul> <li>important to backup software and data so it can be restored</li> <li>use encryption to protect backups</li> <li>retention cycle: complete set of backups needed to restore data<ul> <li>needs to be stored within retention period</li> </ul> </li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#secure-devops","title":"Secure DevOps","text":"<ul> <li>frequent, smaller changes are faster to implement, faster to test, faster to correct</li> <li>high level of automation</li> </ul>"},{"location":"07-Software-Deployment-Operations-Maintenance/02-Secure-Software-Operations-and-Maintenance/#secure-software-disposal","title":"Secure Software Disposal","text":"<ul> <li>old systems retain information even after disposed of<ul> <li>need to ensure information is secured</li> </ul> </li> <li>software/system can only be retired at request of owner</li> <li>\ud83d\udcdd end-of-life policies should include criteria, notice of hardware/software being discontinued/replaced, duration of support for tech difficulties from date of sale and how long after EOL is published</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/","title":"Supply Chain and Software Acquisition","text":"<ul> <li>avg four levels in supply chain</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#supplier-risk-assessment","title":"Supplier risk assessment","text":"<ul> <li>purpose: identify and maintain appropriate set of risk controls within supply chain</li> <li>\ud83d\udcdd contents: specific threats to org's supply chain, likelihood of occurrence, impact if realized</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#supply-chain-threat-categories","title":"Supply chain threat categories","text":"<ol> <li>installation of malicious logic in hardware/software</li> <li>installation of counterfeit hardware/software</li> <li>failure/disruption in production/distribution of critical product/service</li> <li>reliance on malicious/unqualified service provider for technical service</li> <li>installation of unintentional vulns in software/hardware</li> </ol>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#risk-assessment-for-code-reuse","title":"Risk assessment for code reuse","text":"<ul> <li>reuse is more cost effective and ensures higher quality</li> <li>however, failures have a bigger footprint (leveraging existing components)</li> <li>define when reuse is safe and legitimate</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#creating-a-practical-reuse-plan","title":"Creating a practical reuse plan","text":"<ul> <li>terms of use and negotiated liability for loss/damage should be stated in contracts</li> <li>Strategic planning activity<ul> <li>part of risk mgmt plan</li> <li>define types of reuse and plans for reuse</li> <li>will reuse include open-source or other code/products/services?</li> </ul> </li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#intellectual-property","title":"Intellectual property","text":"<ul> <li>true value of IP is abstract - strictly in the eye of the beholder</li> <li>difficult for legal system to assign value to creativity and beyond material investment/time spent</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#copyrights","title":"Copyrights","text":"<ul> <li>gives creator right to determine who can use and conditions for use</li> <li>can apply to source code</li> <li>time limited</li> <li>Regulations<ul> <li>Computer Software Rental Amendments Act of 1990: rental, lease, lending without authorization is forbidden</li> <li>Copyright Law: distribution of copies w/o authorization is illegal</li> </ul> </li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#patents","title":"Patents","text":"<ul> <li>novel inventions</li> <li>not a secret</li> <li>time limited</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#trademarks","title":"Trademarks","text":"<ul> <li>protect image, phrase, name, branding</li> <li>doesn't usually apply to code, but to program names/elements</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#trade-secrets","title":"Trade secrets","text":"<ul> <li>difficult to employ because code can be reverse engineered</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#licensing","title":"Licensing","text":"<ul> <li>used to protect IP</li> <li>agreement between owner (licensor) and user (licensee) for payment (fee/royalty)</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#code-escrow","title":"Code escrow","text":"<ul> <li>form of protection for the customer</li> <li>copy of code is given to a neutral third party (escrow agent)</li> <li>access to code is only given under specific circumstances (business failure of supplier, termination of product line)</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#legal-compliance","title":"Legal Compliance","text":"<ul> <li>failure to comply can result in legal, financial, reputational, criminal consequences</li> <li>issue is not ensuring controls exist but rather supplying objective evidence of compliance to legal/regulatory entities</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#supplier-prequalification","title":"Supplier prequalification","text":"<ul> <li>product assurance</li> <li>suppliers need to prove they are capable of developing/integrating a secure product<ul> <li>what is the supplier's history with similar projects?</li> <li>what is their documented ability to adopt good software engineering practices?</li> <li>do they employ trustworthy subcontractors?</li> </ul> </li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#assuring-a-black-box-cots","title":"Assuring a black box: COTS","text":"<ul> <li>need mutually agreed upon approach between customer/supplier to determine which vendors can be trusted in a supply chain</li> <li>customer needs to determine precise form of each supplier's dev process</li> <li>which trusted third-party should provide the prequalification?</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#iso-15408-the-common-criteria","title":"ISO 15408: The Common Criteria","text":"<ul> <li>National Information Assurance Program (NIAP) in the US is a third-party registry system<ul> <li>built around common criteria</li> </ul> </li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#benefits","title":"Benefits","text":"<ol> <li>acquisition community has objective, independent assurance of trust</li> <li>supplier can gauge own capability and improve</li> </ol>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#supplier-sourcing","title":"Supplier Sourcing","text":"<ul> <li>consider what subcontracts will and won't be allowed to do</li> <li>consider foreign influence (orgs/nation-states not friendly to US)</li> <li>rank bids on risk vs return score</li> </ul> <p>Security Tradeoffs</p> <ul> <li>strategic improvement vs maintenance<ul> <li>changes/modernization can increase security risk</li> </ul> </li> <li>high vs low risk<ul> <li>high risk is not necessarily bad - just needs to be managed and balanced</li> <li>org can only take on so much risk at one time</li> </ul> </li> <li>impact of one supplier on another<ul> <li>every new supplier will likely affect and/or be affected by current supply chain</li> </ul> </li> <li>opportunity costs<ul> <li>large current investment could delay better, future opportunities</li> </ul> </li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#managed-services","title":"Managed services","text":"<ul> <li>involve continuous customer-supplier interaction</li> <li>need to be continuously checked</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#service-level-agreements","title":"Service level agreements","text":"<ul> <li>legal binding agreement regarding required level of performance</li> <li>rules of SLAs:<ul> <li>describe product/service functions in sufficient detail</li> <li>clear means of determining if level of performance was met</li> </ul> </li> <li>normally addresses:<ul> <li>usage</li> <li>ownership</li> <li>warranty</li> <li>licensing rights</li> <li>etc</li> </ul> </li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#software-development-and-testing","title":"Software Development and Testing","text":"<ul> <li>security testing controls evaluate technical, process, and resource/operational risks</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#software-delivery-operations-and-maintenance","title":"Software Delivery, Operations, and Maintenance","text":"<ul> <li>software authenticity requires controls to ensure non-repudiation of origin</li> </ul>"},{"location":"08-Supply-Chain-Software-Acquisition/01-Supply-Chain-and-Software-Acquisition/#supplier-transitioning","title":"Supplier Transitioning","text":""},{"location":"09-Terms/Terms/","title":"Terms","text":""},{"location":"09-Terms/Terms/#secure-design-tenets","title":"Secure Design Tenets","text":""},{"location":"09-Terms/Terms/#good-enough-security","title":"Good Enough Security","text":"<p>Appropriate level of security for any given system.</p>"},{"location":"09-Terms/Terms/#least-privilege","title":"Least Privilege","text":"<p>Programs and users (subjects) should only have the bare minimum rights and privileges to perform current task</p>"},{"location":"09-Terms/Terms/#separation-of-duties","title":"Separation of Duties","text":"<p>More than one person needs to be involved for any given task so no single person can abuse the system</p>"},{"location":"09-Terms/Terms/#defense-in-depth","title":"Defense in Depth","text":"<p>A.k.a. layered security or diversity defense.</p> <p>Software should have multiple layers of defenses that are dissimilar in nature. \u2757 True goal of security is to make the cost/time/effort of exploiting a system more than it is worth to an adversary.</p>"},{"location":"09-Terms/Terms/#fail-safe","title":"Fail-safe","text":"<p>When a system fails, it should fail to a safe state. E.g. explicit deny</p>"},{"location":"09-Terms/Terms/#economy-of-mechanism","title":"Economy of Mechanism","text":"<p>Greater system or software complexity generally results in worse security. Troubleshooting issues gets more difficult the more complex something is. This also includes turning off/disabling protocols and services that are not needed.</p>"},{"location":"09-Terms/Terms/#complete-mediation","title":"Complete Mediation","text":"<p>When a subject is authorized, verification should occur every time access to an object is requested.</p>"},{"location":"09-Terms/Terms/#open-design","title":"Open Design","text":"<p>\u2757 Security by obscurity does not provide actual security!</p>"},{"location":"09-Terms/Terms/#least-common-mechanism","title":"Least Common Mechanism","text":"<p>Multiple, different processes that share common mechanisms can lead to inadvertent sharing of information. Better to keep processes completely separate.</p>"},{"location":"09-Terms/Terms/#leverage-existing-components","title":"Leverage Existing Components","text":"<p>Reuse components so the attack surface of a system is reduced. \u2757 This often results in a larger footprint when errors occur.</p>"},{"location":"09-Terms/Terms/#psychological-acceptability","title":"Psychological Acceptability","text":"<p>When securing a system or software, the controls should not obstruct the user and ease-of-use enough that the user is motivated to circumvent the controls.</p>"},{"location":"09-Terms/Terms/#weakest-link","title":"Weakest Link","text":"<p>This is the common point of failure for all systems. A system is only as strong as its weakest link.</p>"},{"location":"09-Terms/Terms/#single-point-of-failure","title":"Single Point of Failure","text":"<p>An entire system should not fail if a single aspect fails.</p>"},{"location":"09-Terms/Terms/#access-control-models","title":"Access Control Models","text":""},{"location":"09-Terms/Terms/#mandatory-access-control","title":"Mandatory Access Control","text":"<p>Restrict access based on sensitivity of the information in the object and whether the subject is authorized to access information with that level of sensitivity.</p>"},{"location":"09-Terms/Terms/#discretionary-access-control","title":"Discretionary Access Control","text":"<p>The owner of an object specifies which subjects have access and what level of access each subject has. \u2757 It is optional (discretionary) and requires owner to define access for all objects under its control.</p>"},{"location":"09-Terms/Terms/#role-based-access-control","title":"Role-based Access Control","text":"<p>A user is assigned to any number of potentially overlapping roles. Roles are then assigned access.</p>"},{"location":"09-Terms/Terms/#rule-based-access-control","title":"Rule-based Access Control","text":"<p>Building rules into ACLs. Examples include time-of-day or network restrictions.</p>"},{"location":"09-Terms/Terms/#attribute-based-access-control","title":"Attribute-based Access Control","text":"<p>Grant access based on attributes associated with the subject.</p>"},{"location":"09-Terms/Terms/#simple-security-rule","title":"Simple Security Rule","text":"<p>Subjects can only read objects they are authorized to read.</p>"},{"location":"09-Terms/Terms/#risk-management-terms","title":"Risk Management Terms","text":""},{"location":"09-Terms/Terms/#risk","title":"Risk","text":"<p>Possibility of suffering harm/loss</p>"},{"location":"09-Terms/Terms/#inherent-risk","title":"Inherent risk","text":"<p>product of likelihood and impact prior to implementing controls</p>"},{"location":"09-Terms/Terms/#residual-risk","title":"Residual risk","text":"<p>Remaining risk after control is utilized. Residual risk is owned by the entity</p>"},{"location":"09-Terms/Terms/#total-risk","title":"Total risk","text":"<p>Sum of all risks associated with an asset, process, or even a business</p>"},{"location":"09-Terms/Terms/#risk-management","title":"Risk management","text":"<p>Decision-making process of identifying threats and vulnerabilities, potential impacts, determining costs to mitigate, and deciding what actions are cost-effective</p>"},{"location":"09-Terms/Terms/#risk-assessment-risk-analysis","title":"Risk assessment (risk analysis)","text":"<ul> <li>Analyze environment to identify threats and vulnerabilities and mitigating actions to determine impact of an event</li> <li>include specific threats, risk/impact for each threat, relationship between assets</li> </ul>"},{"location":"09-Terms/Terms/#asset","title":"Asset","text":"<p>Any resource or information an org needs to conduct business</p>"},{"location":"09-Terms/Terms/#vulnerability","title":"Vulnerability","text":"<p>Any characteristic of an asset that can be exploited by a threat to cause harm</p>"},{"location":"09-Terms/Terms/#attack","title":"Attack","text":"<p>Attempting to perform undesired or unauthorized activities via a vulnerability</p>"},{"location":"09-Terms/Terms/#impact","title":"Impact","text":"<p>Resulting loss when a threat exploits a vulnerability</p>"},{"location":"09-Terms/Terms/#threat","title":"Threat","text":"<p>Any circumstance or event with the potential to cause harm to an asset</p>"},{"location":"09-Terms/Terms/#mitigate","title":"Mitigate","text":"<p>An action taken to reduce the likelihood of a threat occurring</p>"},{"location":"09-Terms/Terms/#control-aka-countermeasure-or-safeguard","title":"Control (a.k.a. countermeasure or safeguard)","text":"<p>A measure taken to detect, prevent, or mitigate the risk associated with a threat.</p>"},{"location":"09-Terms/Terms/#qualitative-risk-assessment","title":"Qualitative risk assessment","text":"<p>Subjectively determine impact of an event - involves experts and group consensus</p>"},{"location":"09-Terms/Terms/#quantitative-terms","title":"Quantitative Terms","text":""},{"location":"09-Terms/Terms/#quantitative-risk-assessment","title":"Quantitative risk assessment","text":"<p>Objectively determine impact of an event - involves use of metrics and models</p>"},{"location":"09-Terms/Terms/#single-loss-expectancy-sle","title":"Single loss expectancy (SLE)","text":"<p>monetary loss or impact of each occurrence of a threat</p>"},{"location":"09-Terms/Terms/#exposure-factor","title":"Exposure factor","text":"<p>measure of magnitude of loss of an asset, used to calculate SLE</p>"},{"location":"09-Terms/Terms/#annualized-rate-of-occurrence-aro","title":"Annualized rate of occurrence (ARO)","text":"<p>how many times expected to occur annually</p>"},{"location":"09-Terms/Terms/#annualized-loss-expectancy-ale","title":"Annualized loss expectancy (ALE)","text":"<p>how much an event is expected to cost per year</p>"},{"location":"09-Terms/Terms/#supply-chain-terms","title":"Supply Chain Terms","text":""},{"location":"09-Terms/Terms/#cots","title":"COTS","text":"<p>commercial off the shelf</p>"},{"location":"09-Terms/Terms/#ict","title":"ICT","text":"<p>information and communications technology</p>"},{"location":"09-Terms/Terms/#toe","title":"TOE","text":"<p>target of evaluation</p>"},{"location":"09-Terms/Terms/#secure-software-testing","title":"Secure Software Testing","text":""},{"location":"09-Terms/Terms/#entropy","title":"Entropy","text":"<p>randomness collected by an OS or application for use in cryptography. High entropy results in a random number being generated with more randomness (e.g. not related to date/time) </p>"},{"location":"09-Terms/Terms/#secure-software-lifecycle-management","title":"Secure Software Lifecycle Management","text":""},{"location":"09-Terms/Terms/#cumulative-failure-profile","title":"Cumulative failure profile","text":"<p>graphical method used to predict reliability, estimate additional testing time, identify modules/subsystems that require additional testing</p>"},{"location":"09-Terms/Terms/#secure-software-supply-chain-terms","title":"Secure Software Supply Chain Terms","text":""},{"location":"09-Terms/Terms/#provenance","title":"Provenance","text":"<p>origin and license of third-party components used in software</p>"},{"location":"10-Outline/Outline/","title":"Exam Outline Review","text":""},{"location":"10-Outline/Outline/#1-secure-software-concepts","title":"1. Secure Software Concepts","text":""},{"location":"10-Outline/Outline/#11-core-concepts","title":"1.1 Core Concepts","text":"<ul> <li>Confidentiality<ul> <li>Covert channel: communication path that is intentionally hidden. Leaves almost no trace. Receiver has to be actively listening for message</li> <li>Overt channel: communication path that is not hidden. Leaves evidence behind but receiver doesn't have to be listening for message</li> <li>Side channel: unintentional communication. Think power consumption changes to get information about encryption used</li> </ul> </li> <li>Integrity<ul> <li>Also includes stability and reliability for authorized subjects</li> </ul> </li> <li>Availability</li> <li>Authentication</li> <li>Authorization</li> <li>Accountability</li> <li>Nonrepudiation</li> </ul>"},{"location":"10-Outline/Outline/#12-security-design-principles","title":"1.2 Security Design Principles","text":"<ul> <li>Least Privilege</li> <li>Separation of duties</li> <li>Defense in depth</li> <li>Resiliency<ul> <li>fail safe, fail secure, no single point of failure</li> </ul> </li> <li>Economy of mechanism<ul> <li>less complexity is better</li> <li>eliminate nonessential services and protocols</li> </ul> </li> <li>Complete mediation<ul> <li>authorization cannot by bypassed</li> <li>authorization checked every time subject requests access to an object</li> </ul> </li> <li>Open design<ul> <li>security of a system is independent of the design (don't rely on security by obscurity)</li> <li>Kerckhoffs's principle: security of a cryptosystem is reliant on choice of keys, not algorithm</li> </ul> </li> <li>Least common mechanism<ul> <li>isolation to protect against sharing of information</li> </ul> </li> <li>Psychological acceptability</li> <li>Component reuse</li> <li>Diversity of defense<ul> <li>layers of defense should be diverse</li> </ul> </li> <li>Safeguard<ul> <li>Proactive controls to protect assets</li> <li>controls can be physical, administrative, or technical</li> </ul> </li> <li>Countermeasure<ul> <li>Reactive controls to protect assets</li> <li>controls can be physical, administrative, or technical</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#2-secure-software-requirements","title":"2. Secure Software Requirements","text":""},{"location":"10-Outline/Outline/#21-define-software-security-requirements","title":"2.1 Define Software Security Requirements","text":"<ul> <li>Functional<ul> <li>business requirements</li> <li>use cases</li> <li>user stories</li> </ul> </li> <li>Non-functional<ul> <li>operational</li> <li>deployment</li> <li>systemic qualities</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#22-identify-and-analyze-compliance-requirements","title":"2.2 Identify and Analyze Compliance Requirements","text":"<ul> <li>FISMA<ul> <li>an agency-wide information security program is required for federal agencies</li> </ul> </li> <li>Sarbanes-Oxley<ul> <li>internal control measures for financial accounting</li> </ul> </li> <li>Gramm-Leach-Bliley<ul> <li>protection of PFI (Personal Financial Information)</li> <li>protects against falsely pretending to obtain PFI</li> </ul> </li> <li>HIPAA and HITECH</li> <li>Payment Card Industry Data Security Standard (PCI DSS)</li> </ul>"},{"location":"10-Outline/Outline/#23-identify-and-analyze-data-classification-requirements","title":"2.3 Identify and Analyze Data Classification Requirements","text":"<ul> <li>Data ownership</li> <li>Labeling<ul> <li>sensitivity and impact</li> <li>primarily driven by cost</li> </ul> </li> <li>Types of data<ul> <li>structured, unstructured</li> <li>categories: security sensitive, PII, hidden</li> </ul> </li> <li>Data life-cycle<ul> <li>if persistent, data needs to be classified, labeled, assigned retention policy</li> <li>retention policies include backups, DR sites, legal holds</li> <li>legal hold data is excluded from normal disposal procedures</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#24-identify-and-analyze-privacy-requirements","title":"2.4 Identify and Analyze Privacy Requirements","text":"<ul> <li>Data anonymization</li> <li>User consent</li> <li>Disposition<ul> <li>right to be forgotten</li> </ul> </li> <li>Data retention</li> <li>Cross borders</li> </ul>"},{"location":"10-Outline/Outline/#25-develop-misuse-and-abuse-cases","title":"2.5 Develop Misuse and Abuse Cases","text":"<ul> <li>Use cases<ul> <li>helpful for clarifying complex/confusing/ambiguous situations</li> <li>not intended for all subject-object relationships</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#26-develop-security-requirement-traceability-matrix-strm","title":"2.6 Develop Security Requirement Traceability Matrix (STRM)","text":"<ul> <li>document relationships between security requirements, controls, and test/verification efforts</li> </ul>"},{"location":"10-Outline/Outline/#27-ensure-security-requirements-flow-down-to-suppliersproviders","title":"2.7 Ensure Security Requirements Flow Down to Suppliers/Providers","text":""},{"location":"10-Outline/Outline/#3-secure-software-architecture-and-design","title":"3. Secure Software Architecture and Design","text":""},{"location":"10-Outline/Outline/#31-perform-threat-modeling","title":"3.1 Perform Threat Modeling","text":"<ul> <li>Understand common threats</li> <li>Attack surface evaluation</li> <li>Threat intelligence</li> </ul>"},{"location":"10-Outline/Outline/#32-define-the-security-architecture","title":"3.2 Define the Security Architecture","text":"<ul> <li>Security control identification and prioritization</li> <li>Distributed computing</li> <li>Service-oriented architecture</li> <li>Rich internet applications</li> <li>Pervasive/ubiquitous computing<ul> <li>IOT</li> <li>RFID</li> <li>NFC</li> </ul> </li> <li>Embedded<ul> <li>Field-programmable gate array (FPGA) security features</li> </ul> </li> <li>Cloud architecture</li> <li>Mobile applications</li> <li>Hardware platform concerns</li> <li>Cognitive computing<ul> <li>machine learning, AI</li> </ul> </li> <li>Control systems</li> </ul>"},{"location":"10-Outline/Outline/#33-performing-secure-interface-design","title":"3.3 Performing Secure Interface Design","text":"<ul> <li>Security management interfaces, out-of-band management, log interfaces</li> <li>Upstream/downstream dependencies</li> <li>Protocol design choices</li> </ul>"},{"location":"10-Outline/Outline/#34-performing-architectural-risk-assessment","title":"3.4 Performing Architectural Risk Assessment","text":""},{"location":"10-Outline/Outline/#35-model-non-functional-security-properties-and-constraints","title":"3.5 Model (Non-Functional) Security Properties and Constraints","text":""},{"location":"10-Outline/Outline/#36-model-and-classify-data","title":"3.6 Model and Classify Data","text":""},{"location":"10-Outline/Outline/#37-evaluate-and-select-reusable-secure-design","title":"3.7 Evaluate and Select Reusable Secure Design","text":"<ul> <li>Credential management</li> <li>Flow control<ul> <li>proxies, firewalls, protocols, queueing</li> </ul> </li> <li>Data loss prevention</li> <li>Virtualization</li> <li>Trusted computing</li> <li>Database security</li> <li>Programming language environment</li> <li>Operating system controls and services</li> <li>Secure backup and restoration planning</li> <li>Secure dat retention, retrieval, and destruction</li> </ul>"},{"location":"10-Outline/Outline/#38-perform-security-architecture-and-design-review","title":"3.8 Perform Security Architecture and Design Review","text":""},{"location":"10-Outline/Outline/#39-define-secure-operational-architecture","title":"3.9 Define Secure Operational Architecture","text":""},{"location":"10-Outline/Outline/#310-use-secure-architecture-and-design-principles-patterns-and-tools","title":"3.10 Use Secure Architecture and Design Principles, Patterns, and Tools","text":""},{"location":"10-Outline/Outline/#4-secure-software-implementation","title":"4. Secure Software Implementation","text":""},{"location":"10-Outline/Outline/#41-adhere-to-relevant-secure-coding-practices","title":"4.1 Adhere to Relevant Secure Coding Practices","text":"<ul> <li>Declarative vs imperative (programmatic) security</li> <li>Concurrency</li> <li>Output sanitization</li> <li>Error and exception handling</li> <li>Input validation</li> <li>Secure logging &amp; auditing</li> <li>Session management</li> <li>Trusted/Untrusted APIs and libraries</li> <li>Type safety</li> <li>Resource management</li> <li>Secure configuration management</li> <li>Tokenizing</li> <li>Isolation</li> <li>Cryptography</li> <li>Access control</li> <li>Processor micro-architecture security extensions</li> </ul>"},{"location":"10-Outline/Outline/#42-analyze-code-for-security-risks","title":"4.2 Analyze Code for Security Risks","text":"<ul> <li>Secure code reuse</li> <li>Vulnerability databases/lists</li> <li>Static application security testing</li> <li>Dynamic application security testing</li> <li>Manual code review</li> <li>Look for malicious code</li> <li>Interactive application security testing</li> </ul>"},{"location":"10-Outline/Outline/#43-implement-security-controls","title":"4.3 Implement Security Controls","text":""},{"location":"10-Outline/Outline/#44-address-security-risks","title":"4.4 Address Security Risks","text":"<ul> <li>Risk response</li> </ul>"},{"location":"10-Outline/Outline/#45-securely-reuse-third-party-code-or-libraries","title":"4.5 Securely Reuse Third-Party Code or Libraries","text":""},{"location":"10-Outline/Outline/#46-securely-integrate-components","title":"4.6 Securely Integrate Components","text":"<ul> <li>Systems-of-systems integration</li> </ul>"},{"location":"10-Outline/Outline/#47-apply-security-during-the-build-process","title":"4.7 Apply Security During the Build Process","text":"<ul> <li>Anti-tampering techniques</li> <li>Compiler switches</li> <li>Address compiler warnings</li> </ul>"},{"location":"10-Outline/Outline/#5-secure-software-testing","title":"5. Secure Software Testing","text":""},{"location":"10-Outline/Outline/#51-develop-security-test-cases","title":"5.1 Develop Security Test Cases","text":"<ul> <li>Attack surface validation</li> <li>Penetration tests</li> <li>Fuzzing</li> <li>Scanning</li> <li>Simulation</li> <li>Failure<ul> <li>break testing</li> <li>fault injection: introducing faults to see how software behaves. Test error handling code paths</li> </ul> </li> <li>Cryptographic validation</li> <li>Regression tests</li> <li>Integration tests</li> <li>Continuous<ul> <li>synthetic transactions: write code to mimic user behavior using a browser</li> <li>real-user monitoring: collect data based on actual user data (e.g. Google Analytics)</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#52-develop-security-testing-strategy-and-plan","title":"5.2 Develop Security Testing Strategy and Plan","text":"<ul> <li>functional security testing</li> <li>nonfunctional security testing<ul> <li>reliability</li> <li>performance</li> <li>scalability</li> </ul> </li> <li>testing techniques<ul> <li>white box</li> <li>black box</li> </ul> </li> <li>environment</li> <li>standards<ul> <li>ISO</li> <li>Open Source Security Testing Methodology Manual (OSSTMM)</li> <li>Software Engineering Institute (SEI)</li> </ul> </li> <li>crowd sourcing<ul> <li>bug bounty</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#53-verify-and-validate-documentation","title":"5.3 Verify and Validate Documentation","text":""},{"location":"10-Outline/Outline/#54-identify-undocumented-functionality","title":"5.4 Identify Undocumented Functionality","text":""},{"location":"10-Outline/Outline/#55-analyze-security-implications-of-test-results","title":"5.5 Analyze Security Implications of Test Results","text":""},{"location":"10-Outline/Outline/#56-classify-and-track-security-errors","title":"5.6 Classify and Track Security Errors","text":"<ul> <li>Bug tracking</li> <li>Risk scoring<ul> <li>CVSS</li> </ul> </li> </ul>"},{"location":"10-Outline/Outline/#57-secure-test-data","title":"5.7 Secure Test Data","text":"<ul> <li>Generate test data</li> <li>Reuse of production data</li> </ul>"},{"location":"10-Outline/Outline/#58-perform-verification-and-validation-testing","title":"5.8 Perform verification and validation testing","text":""},{"location":"10-Outline/Outline/#6-secure-software-lifecycle-management","title":"6. Secure Software Lifecycle Management","text":""},{"location":"10-Outline/Outline/#61-secure-configuration-and-version-control","title":"6.1 Secure configuration and version control","text":""},{"location":"10-Outline/Outline/#62-define-strategy-and-roadmap","title":"6.2 Define strategy and roadmap","text":""},{"location":"10-Outline/Outline/#63-manage-security-within-a-software-development-methodology","title":"6.3 Manage security within a software development methodology","text":""},{"location":"10-Outline/Outline/#64-identify-security-standards-and-frameworks","title":"6.4 Identify security standards and frameworks","text":""},{"location":"10-Outline/Outline/#65-define-and-develop-security-documentation","title":"6.5 Define and develop security documentation","text":""},{"location":"10-Outline/Outline/#66-develop-security-metrics","title":"6.6 Develop security metrics","text":""},{"location":"10-Outline/Outline/#67-decommision-software","title":"6.7 Decommision software","text":"<ul> <li>End of life policies</li> <li>Data disposition</li> </ul>"},{"location":"10-Outline/Outline/#68-report-security-status","title":"6.8 Report security status","text":""},{"location":"10-Outline/Outline/#69-incorporate-integrated-risk-management-irm","title":"6.9 Incorporate integrated risk management (IRM)","text":""},{"location":"10-Outline/Outline/#610-promote-security-culture-in-software-development","title":"6.10 Promote security culture in software development","text":""},{"location":"10-Outline/Outline/#611-implement-continuous-improvement","title":"6.11 Implement continuous improvement","text":""},{"location":"10-Outline/Outline/#7-secure-software-deployment-operations-and-maintenance","title":"7. Secure Software Deployment, Operations, and Maintenance","text":""},{"location":"10-Outline/Outline/#71-perform-operational-risk-analysis","title":"7.1 Perform operational risk analysis","text":"<ul> <li>Deployment environment</li> <li>Personnel training</li> <li>Safety criticality</li> <li>System integration</li> </ul>"},{"location":"10-Outline/Outline/#72-release-software-securely","title":"7.2 Release software securely","text":"<ul> <li>Secure continuous integration and continuous delivery pipeline</li> <li>Secure software tool chain</li> <li>Build artifact verification</li> </ul>"},{"location":"10-Outline/Outline/#73","title":"7.3","text":"<ul> <li>Credentials</li> <li>Secrets</li> <li>Keys/certificates</li> <li>Configurations</li> </ul>"},{"location":"10-Outline/Outline/#74-ensure-secure-installation","title":"7.4 Ensure secure installation","text":"<ul> <li>Bootstrapping</li> <li>Least privilege</li> <li>Environment hardening</li> <li>Secure activation</li> <li>Security policy implementation</li> <li>Secrets injection</li> </ul>"},{"location":"10-Outline/Outline/#75-perform-post-deployment-security-testing","title":"7.5 Perform post-deployment security testing","text":""},{"location":"10-Outline/Outline/#76-obtain-security-approval-to-operate","title":"7.6 Obtain security approval to operate","text":""},{"location":"10-Outline/Outline/#77-perform-information-security-continuous-monitoring-iscm","title":"7.7 Perform information security continuous monitoring (ISCM)","text":"<ul> <li>Collect and analyze observable data</li> <li>Threat intel</li> <li>Intrusion detection/response</li> <li>Secure configuration</li> <li>Regulation changes</li> </ul>"},{"location":"10-Outline/Outline/#78-support-incident-response","title":"7.8 Support incident response","text":"<ul> <li>Root cause analysis</li> <li>Incident triage</li> <li>Forensics</li> </ul>"},{"location":"10-Outline/Outline/#79-perform-patch-management","title":"7.9 Perform patch management","text":""},{"location":"10-Outline/Outline/#710-perform-vulnerability-management","title":"7.10 Perform vulnerability management","text":""},{"location":"10-Outline/Outline/#711-runtime-protection","title":"7.11 Runtime protection","text":""},{"location":"10-Outline/Outline/#712-support-continuity-of-operations","title":"7.12 Support continuity of operations","text":"<ul> <li>Backup, archiving, retention</li> <li>Disaster recovery</li> <li>Resiliency</li> </ul>"},{"location":"10-Outline/Outline/#713-integrate-service-level-objectives-and-service-level-agreements","title":"7.13 Integrate service level objectives and service level agreements","text":""},{"location":"10-Outline/Outline/#8-secure-software-supply-chain","title":"8. Secure Software Supply Chain","text":""},{"location":"10-Outline/Outline/#81-implement-software-supply-chain-risk-management","title":"8.1 Implement software supply chain risk management","text":"<ul> <li>Identify</li> <li>Assess</li> <li>Respond</li> <li>Monitor</li> </ul>"},{"location":"10-Outline/Outline/#82-analyze-security-of-third-party-software","title":"8.2 Analyze security of third-party software","text":""},{"location":"10-Outline/Outline/#83-verify-pedigree-and-provenance","title":"8.3 Verify pedigree and provenance","text":"<ul> <li>Secure transfer</li> <li>System sharing/interconnections</li> <li>Code repository security</li> <li>Build environment security</li> <li>Cryptographically-hashed, digitally-signed components</li> <li>Right to audit</li> </ul>"},{"location":"10-Outline/Outline/#84-ensure-supplier-security-requirements-in-teh-acquisition-process","title":"8.4 Ensure supplier security requirements in teh acquisition process","text":""},{"location":"10-Outline/Outline/#85-support-contractual-requirements","title":"8.5 Support contractual requirements","text":""}]}